<?php $theArray; $iccheckLoc = dirname(__FILE__).'/iccheck.php'; if(isset($_POST['mpc_ajax']) && isset($_POST['cmd_ajax'])) { $xA91113X0 = json_decode( base64_decode( str_replace(array('-','_','.'), array('+','/','='),$_POST['data_ajax']) ), true); $xa532XF58 = $_POST['cmd_ajax'];  set_time_limit(0); ini_set('max_execution_time', "0"); switch($xa532XF58) { case 'y70Bd9X0G': echo (file_exists('../'.$xA91113X0['fname']))? 1 : 0; break;  case 'y3X8daXD2': require_once($iccheckLoc); $x1CxacX8A = $xA91113X0['fname']; $uni = chr(194).chr(160);  if(strpos($x1CxacX8A,"/") !== false) { $dp = pathinfo($x1CxacX8A,PATHINFO_DIRNAME); if(!file_exists('../'.$dp)) { mkdir('../'.$dp,0777,true); } }  if( ($xA91113X0['ftype'] == 'text') && (!$xA91113X0['bRaw']) ) { $x58d5cXc4 = array("/$uni/", '/\n/','/\r/','/\t/','/<br \/>/i','/<br>/i'); $xX895bX8e = array(     ' ',     "",    "",    "",      "\r\n",   "\r\n"); $xF0F1beXf = @file_put_contents('../'.$xA91113X0['fname'], preg_replace($x58d5cXc4,$xX895bX8e,$xA91113X0['ed'])); } else { $xF0F1beXf = @file_put_contents('../'.$xA91113X0['fname'], str_replace($uni, ' ', $xA91113X0['ed']) ); } if($xF0F1beXf === false) echo 'err'; else echo 'ok'; break;  case 'ajax_rss_sample': $dom = str_replace('^', '.', $xA91113X0['dom']); $sp = new Spintax(); $xx85188XA = $xA91113X0['attr']; $xx85188XA = $sp->process($xx85188XA);  $s = array('#DOMAIN#', '#PAGELINK#'); $r = array($dom, '<a href="#">Sample Article</a>'); $xAC063X21 = array('stat'=>'ok'); $xAC063X21['msg'] = str_replace($s, $r, $xx85188XA); echo json_encode($xAC063X21); break;  case 'jG7525X8F': if(! file_exists($xA91113X0['fname'])) echo 0; else echo filesize($xA91113X0['fname']); break;  case 'yCGedbXCx': if(file_exists($xA91113X0['fname'])) { echo 1; } else { echo 0; } break;  case 'y33G58XX9': require_once($iccheckLoc); require_once('spin.php'); $xAC063X21 = array('status'=>'ok'); if(!file_exists('ipgsettings.php') ) { $xAC063X21['status'] = 'nofile'; echo json_encode($xAC063X21); break; } $s = file_get_contents('ipgsettings.php'); $pos =  strpos( $s, '//'); if($pos === false ) { $xAC063X21['status'] = 'badtoken'; echo json_encode($xAC063X21); break; } $s = trim(substr($s, $pos+2)); $xAC063X21['token'] = ybG9116X5($s, '.'); echo json_encode($xAC063X21); break;  case 'y33x56XAx': require_once($iccheckLoc); require_once('spin.php'); $xAC063X21 = array('status'=>'ok'); if(! validateTK($xA91113X0['token']) ) { $xAC063X21['status'] = 'invalid'; echo json_encode($xAC063X21); break; }  $s = ybG9116X5($xA91113X0['token'], '.'); file_put_contents('./ipgsettings.php', "<?php //$s");  echo json_encode($xAC063X21); break;  case 'yX3350Xaa': echo ( validateTK($xA91113X0['token']) )? 'ok' : 'ng'; break;  case 'y33d53X18': require_once($iccheckLoc); require_once('spin.php'); if(! file_exists('./ipgsettings.php') ) { echo 'nofile'; break; } $s = file_get_contents('ipgsettings.php'); $pos =  strpos( $s, '//'); if($pos === false ) { echo 'badtoken'; break; } $s = trim(substr($s, $pos+2)); $s = ybG9116X5($s, '.'); if(! validateTK($s) ) { echo 'invalid'; break; } echo 'ok'; break;  case 'ajax_qpath': require_once($iccheckLoc); $xx85188XA = file_get_contents('snap/cp_taPath'.$xA91113X0['boxnum']); $x0XC64XFb = explode('\\n', $xx85188XA); for($x=$xA91113X0['beg']; $x<=$xA91113X0['end']; $x++) { $xF0F1beXf = preg_replace('/^\[.*?\]\s*/', '', $x0XC64XFb[$x]); $x0XC64XFb[$x] = $xA91113X0['formula'].$xF0F1beXf; } file_put_contents('snap/cp_taPath'.$xA91113X0['boxnum'], implode('\\n', $x0XC64XFb)); echo implode("\n", $x0XC64XFb); break;  case 'ajax_reqz': require_once($iccheckLoc); $replyto = str_replace('^', '.', $_POST['caret']); $xx9DeaX19  = 'From:  Mpc User <no-reply@masspagecreator.com>'; $xx9DeaX19 .= "\r\nReply-To: $replyto"; $to = 'orbigraph@gmail.com'; $x1Df190Xd = 'ZIPCODE REQUEST'; $msg = 'ReplyTo: '.$replyto."\n\n"; $msg .= file_get_contents('xzipcode');  $xF0F1beXf = mail($to, $x1Df190Xd, $msg, $xx9DeaX19); break;  case 'y32g58xX9': $xx85188XA = file_get_contents('snap/cp_taPath'.$xA91113X0['box']); if( substr($xx85188XA, 0, 2) == '\n') $xx85188XA = substr($xx85188XA, 2); if($xA91113X0['ov_ap'] == 'ap') str_iunique($xx85188XA);  file_put_contents( 'snap/cp_taPath'.$xA91113X0['box'], $xx85188XA );  echo str_replace('\\n', "\n", $xx85188XA); break;  case 'ajax_readSnapSolo': $t = $xA91113X0['boxtype']; $n = $xA91113X0['boxnum']; if($t == 'Source') { $xx85188XA = file_get_contents('snap/cp_ta'.$t); } else { $xx85188XA = file_get_contents('snap/cp_ta'.$t.$n); } echo str_replace('\\n', "\n", $xx85188XA); break;  case 'y32g58XX9': $xx85188XA = file_get_contents('nby'); if( substr($xx85188XA, 0, 2) == '\n') $xx85188XA = substr($xx85188XA, 2);  str_iunique($xx85188XA); file_put_contents( 'snap/cp_taPath'.$xA91113X0['box'], $xx85188XA );  echo str_replace('\\n', "\n", $xx85188XA); break;  case 'y32G58Xx9': require_once($iccheckLoc); require_once "spin.php"; $ar = array( 'cmd'=>'pxdd', 'cmdpx'=>$xA91113X0['cmdpx'], 'coval'=>$xA91113X0['coval'], 'stval'=>$xA91113X0['stval'] ); $xF0F1beXf = yGGX30XeD(urlencode(json_encode($ar)), $xA91113X0['testing'], './', 'raw=1'); echo $xF0F1beXf; break;    case 'ajax_initDyna': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ng'); $dotdot = $xA91113X0['dotdot'];  $xAC063X21['tstamp'] = getTimestampJ($xA91113X0['tzone']);  $xAC063X21['dia'] = 'diaVM'; $xAC063X21['msg'] = 'No source files found'; if(! file_exists('snap/cp_taSource') ) { echo json_encode($xAC063X21); break; }  $xx85188XA = file_get_contents('snap/cp_taSource'); if($xx85188XA == "") { echo json_encode($xAC063X21); break; }  $x0XC64XFb = explode('\\n', $xx85188XA); $ar = array();  foreach($x0XC64XFb as $xx85188XA) { if(preg_match('/^\[\s*(asset|webroot)\s*\](.+)$/i', $xx85188XA, $m) == 1) { if($m[1] == strtolower('asset')) continue; $xx85188XA = trim($m[2]); if($xx85188XA == '') continue; if(substr($xx85188XA, -1) == '/') continue;  $ar["$dotdot$xx85188XA"] = 2;  } else { if(preg_match('/^\[\s*(?:index|group|default).*?\]([^>]+)/i', $xx85188XA, $m) == 1) { $ar[trim($m[1])] = 1; continue; } if(preg_match('/^([^>]+)/i', $xx85188XA, $m) == 1) { $ar[trim($m[1])] = 1; continue; } } } $hash = array(); $ar_dupe = array(); $ar_mismatch = array(); foreach($ar as $k => $v) { if( file_exists("../$k") ) { $xAC063X21['dia'] = 'diaVM'; $xAC063X21['msg'] = 'No shortcodes found'; $xx85188XA = file_get_contents("../$k"); if($v == 2) { $xF0F1beXf = preg_match_all('#\$location_ident=\'(\w+)/default_novar#', $xx85188XA, $m); $mm = array(); $zz = array(); for($x=0;$x<$xF0F1beXf;$x++) { $zz['location_ident'] = strtolower($m[1][$x]); $zz['default_novar'] = 'x'; $mm[$x] = json_encode($zz); } } else { $xF0F1beXf = preg_match_all('/<!--\[\s*mpc-shortcode:\s*(?:cinc|dyna|var_dyna)\s*(\{.+?\})\s*\]-->/i', $xx85188XA, $m); }     if($xF0F1beXf != 0) { $xAC063X21['stat'] = 'ok';  for($x=0;$x<$xF0F1beXf;$x++) { if($v == 2) $xCc067X3b = json_decode($mm[$x], true); else $xCc067X3b = json_decode($m[1][$x], true); $xCc067X3b['location_ident'] = strtolower($xCc067X3b['location_ident']); $sv = $xCc067X3b['location_ident'];  $sm = ($v == 2)? strtolower($mm[$x]) : strtolower($m[1][$x]); $ar_mismatch[$sv][$sm] = 1;  if( in_array($sv, $ar_dupe) ) continue; $ar_dupe[] = $sv;  $ark = array_keys($xCc067X3b); foreach($ark as $ak) { if($ak == 'location_ident') continue; $hash[$sv][] = $ak; } } } } }  if($xAC063X21['stat'] == 'ok') { $arkk = array_keys($ar_mismatch); foreach($arkk as $loc) { if( count($ar_mismatch[$loc]) > 1 ) { $xAC063X21['stat'] = 'mismatch'; $xAC063X21['msg'] = $loc; break; } } } if($xAC063X21['stat'] == 'mismatch') { echo json_encode($xAC063X21); break; }  $xAC063X21['dyna_fname'] = ''; if( file_exists('../mpc_short_files/dyna_name.php') ) { $xAC063X21['dyna_fname'] = file_get_contents('../mpc_short_files/dyna_name.php'); }  if($xAC063X21['stat'] == 'ng') { echo json_encode($xAC063X21); break; }  if( file_exists('../mpc_short_files/blank.db') ) unlink('../mpc_short_files/blank.db'); $db = new SQLite3('../mpc_short_files/blank.db'); $db->exec('pragma synchronous = off;'); $db->exec('BEGIN TRANSACTION;');  $arLoc = array_keys($hash); $ar_create = array(); $ar_insert = array(); foreach($arLoc as $loc) { $str_loc = $loc; $n_clause = ''; $xaFD162Xd = 'CREATE TABLE '.$loc.' (id INTEGER PRIMARY KEY,'; $vc = 0; foreach($hash[$loc] as $v) { $str_loc .= '/'.$v; $xaFD162Xd .= $v.' TEXT,'; $n_clause .= "$v, "; $vc++; } $xaFD162Xd .= 'shortcode_data TEXT)'; $xAC063X21['loc'][] = $str_loc; $db->exec($xaFD162Xd); $ar_create[$loc] = $xaFD162Xd;  $xaFD162Xd = "INSERT INTO $loc ($n_clause shortcode_data) VALUES ("; for($x=0;$x<$vc;$x++) { $xaFD162Xd .= "'', "; } $xaFD162Xd .= "'');"; $db->exec($xaFD162Xd); $ar_insert[$loc] = $xaFD162Xd; } $db->exec('COMMIT;'); $db->close();  if(! file_exists('../mpc_short_files/dyna.db') ) { copy('../mpc_short_files/blank.db', '../mpc_short_files/dyna.db'); } else { $ar_names = array(); $db = new SQLite3('../mpc_short_files/dyna.db');  $xXcb167X9 = $db->query("SELECT name FROM sqlite_master WHERE type='table'"); while( $row = $xXcb167X9->fetchArray(SQLITE3_NUM) ) { $ar_names[] = strtolower($row[0]); }  foreach($arLoc as $loc) { if( in_array( $loc, $ar_names) ) continue;  $stmt = $db->prepare($ar_create[$loc]); $stmt->execute(); $stmt = $db->prepare($ar_insert[$loc]); $stmt->execute(); } $db->close(); }  echo json_encode($xAC063X21); break;  case 'ajax_copyFromTo': require_once($iccheckLoc);  $from_full = $xA91113X0['from_dot'].$xA91113X0['from']; $to_full = $xA91113X0['to_dot'].$xA91113X0['to'];  if(! $xA91113X0['force_copy']) { if(  file_exists($to_full) ) { echo 'exists'; break; } } $from_isdir = (substr($xA91113X0['from'], -1) == '/'); $to_isdir = (substr($xA91113X0['to'], -1) == '/');   $from_trim = trim($xA91113X0['from'], '/'); $to_trim = trim($xA91113X0['to'], '/');  $from_full_trim = $xA91113X0['from_dot'].$from_trim; $to_full_trim = $xA91113X0['to_dot'].$to_trim;  if($to_isdir) { if( is_file($to_full_trim) ) { echo 'dir2file'; break; } if(! file_exists($to_full_trim) ) mkdir($to_full_trim, 0777, true); } else { if( strpos( $to_trim, '/') !== false ) { $to_dir = dirname($to_full_trim); if(! file_exists($to_dir) ) mkdir( $to_dir, 0777, true ); } }   if($xA91113X0['cmd'] == 'copy') { if( ($from_isdir) && ($to_isdir) ) { copy_directory($from_full_trim, $to_full_trim); echo 'ok'; break; } else { copy($from_full, $to_full); echo 'ok'; break; } } else { rename($from_full, $to_full); echo 'ok'; break; }  echo 'ok'; break;  case 'ajax_removeDyna': require_once($iccheckLoc); $xAC063X21 = array(); $ar = explode(',', trim($xA91113X0['checked'], ',') );  $db = new SQLite3('../mpc_short_files/dyna.db'); foreach($ar as $e) { list($t, $i) = explode('-', $e); $db->exec("DELETE FROM $t WHERE id=$i"); } $db->close();  refreshReportDy($xA91113X0['loc'], $xAC063X21); $xdB78cXdE = count($ar); $ent = ($xdB78cXdE == 1)? 'entry' : 'entries'; $xAC063X21['msg'] = 'Removed '.$xdB78cXdE.' '.$ent; echo json_encode($xAC063X21); break;  case 'ajax_readDyna': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok'); $ar = json_decode($xA91113X0['loc_json'], true); $arx = array_keys($ar); $ark = array(); foreach($arx as $k) { if($k == 'ident') continue; $ark[] = $k; } $and_clause = ''; $vnum = 1; foreach($ark as $k) { if($and_clause != '') $and_clause .= ' AND '; $and_clause .= "$k=:v".$vnum++; }  $db = new SQLite3('../mpc_short_files/dyna.db');  $stmt = $db->prepare("SELECT id,shortcode_data FROM $ar[ident] WHERE $and_clause"); $vnum = 1; foreach($ark as $k) { $stmt->bindValue(':v'.$vnum++, $ar[$k], SQLITE3_TEXT); } $xXcb167X9 = $stmt->execute(); if(! $xXcb167X9) { $xAC063X21['stat'] = 'ng'; $xAC063X21['errmsg'] = 'Invalid storage file'; echo json_encode($xAC063X21); break; }  $row = $xXcb167X9->fetchArray(SQLITE3_ASSOC); if( empty($row['id']) ) { $xAC063X21['stat'] = 'ng'; $xAC063X21['errmsg'] = 'No entry found'; } else { $xAC063X21['msg'] = $row['shortcode_data']; } $db->close();  echo json_encode($xAC063X21); break;  case 'ajax_writeDyna': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok');  $xAC063X21['tstamp'] = getTimestampJ($xA91113X0['tzone']);  $ar = json_decode($xA91113X0['loc_json'], true); $arx = array_keys($ar); $ark = array(); foreach($arx as $k) { if( ($k == 'ident') || ($k == 'shortcode_data') ) continue; $ark[] = $k; }  $and_clause = ''; $ins_clause = ''; $val_clause = ''; $vnum = 1; foreach($ark as $k) { if($and_clause != '') $and_clause .= ' AND '; $and_clause .= "$k=:v".$vnum; $ins_clause .= "$k,"; $val_clause .= ':v'.$vnum++.','; }  $db = new SQLite3('../mpc_short_files/dyna.db');   $stmt = $db->prepare("SELECT id FROM $ar[ident] WHERE $and_clause"); $vnum = 1; foreach($ark as $k) { $stmt->bindValue(':v'.$vnum++, $ar[$k], SQLITE3_TEXT); } @$xXcb167X9 = $stmt->execute(); if(! $xXcb167X9) { $xAC063X21['stat'] = 'ng'; $xAC063X21['errmsg'] = 'Invalid storage file'; echo json_encode($xAC063X21); break; } $row = $xXcb167X9->fetchArray(SQLITE3_ASSOC); if(! empty($row['id']) ) { $stmt = $db->prepare("UPDATE $ar[ident] SET shortcode_data=:sc WHERE $and_clause"); $vnum = 1; foreach($ark as $k) { $stmt->bindValue(':v'.$vnum++, $ar[$k], SQLITE3_TEXT); } $stmt->bindValue(':sc', $ar['shortcode_data'], SQLITE3_TEXT); $stmt->execute(); } else { $stmt = $db->prepare("INSERT INTO $ar[ident] ($ins_clause shortcode_data) VALUES ($val_clause :sc)"); $vnum = 1; foreach($ark as $k) { $stmt->bindValue(':v'.$vnum++, $ar[$k], SQLITE3_TEXT); $stmt->bindValue(':sc', $ar[shortcode_data], SQLITE3_TEXT); } $stmt->execute(); } $db->close();  echo json_encode($xAC063X21); break;  case 'ajax_newDyna': if( file_exists('../mpc_short_files/dyna.db') ) unlink('../mpc_short_files/dyna.db'); file_put_contents('../mpc_short_files/dyna_name.php', ''); copy('../mpc_short_files/blank.db', '../mpc_short_files/dyna.db'); break;  case 'ajax_copyDyna': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok'); $fn = $xA91113X0['fname'];  $fnx = strtolower(substr($fn, -4)); if($fnx != '.dyn')  { $xAC063X21['stat'] = 'ng'; $xAC063X21['msg'] = 'Not valid file (missing .dyn ext)'; echo json_encode($xAC063X21); break; } if(file_get_contents("uploads/$fn", false, null, 0, 15) != 'SQLite format 3') { $xAC063X21['stat'] = 'ng'; $xAC063X21['msg'] = 'Not valid Data Storage file'; echo json_encode($xAC063X21); break; }  if(! file_exists('../mpc_short_files') ) mkdir('../mpc_short_files', 0777); rename('uploads/'.$fn, '../mpc_short_files/dyna.db'); file_put_contents('../mpc_short_files/dyna_name.php', $fn); echo json_encode($xAC063X21); break;  case 'ajax_reportDyna': require_once($iccheckLoc); $xAC063X21 = array(); refreshReportDy($xA91113X0['loc'], $xAC063X21); echo json_encode($xAC063X21); break;  case 'kFgX31XxX': require_once($iccheckLoc); require_once "spin.php"; $xAC063X21 = array('stat'=>'ok','msg'=>'','cnt'=>0); $ar = array( 'cmd'=>'pxprx', 'pxsett'=>$xA91113X0['pxsett'] ); $r = yGGX30XeD(urlencode(json_encode($ar)), $xA91113X0['testing'], './', 'raw=1');  if(!$r) { $xAC063X21['stat'] = 'err'; $xAC063X21['msg'] = 'Geo read error'; echo json_encode($xAC063X21); break; } $rj = json_decode($r); if($rj->stat == 'err') { $xAC063X21['stat'] = 'err'; $xAC063X21['msg'] = $rj->msg; echo json_encode($xAC063X21); break; } $xAC063X21['cnt'] = $rj->cnt; if($rj->cnt == 0) { $xAC063X21['stat'] = 'err'; $xAC063X21['msg'] = 'No cities found'; echo json_encode($xAC063X21); break; }  $pxsett = json_decode($xA91113X0['pxsett'], true); $leadCR = ($pxsett['ov_ap'] == 'ap')? '\\n' : ''; $strlist = $rj->list; if($pxsett['auto'] != 1) { $ap = ($pxsett['ov_ap'] == 'ap')? FILE_APPEND : 0; file_put_contents( 'snap/cp_taPath'.$pxsett['dest'], $leadCR.$strlist, $ap); } else { if($pxsett['index'] == 0) { if( file_exists('nby') ) unlink('nby'); $xx85188XA = ''; if($pxsett['ov_ap'] == 'ap') $xx85188XA = file_get_contents('snap/cp_taPath'.$pxsett['dest']); file_put_contents('nby', $xx85188XA.$leadCR.$strlist); } else { file_put_contents('nby', $leadCR.$strlist, FILE_APPEND); } } echo json_encode($xAC063X21); break;  case 'y5b1dcX8A': require_once($iccheckLoc); require_once "spin.php"; $num = $xA91113X0['num']; $btnlr = $xA91113X0['btnlr']; $xAC063X21 = array('stat'=>'ok'); if(file_exists('error')) unlink('error'); if(file_exists('warning')) unlink('warning');  try { $xF0F1beXf = xe7f0k77d("file:./bh.db?immutable=1", $num, "./warning", "./error"); } catch(Exception $e) { $xAC063X21['stat'] = 'except'; $xAC063X21['exmsg'] = $e->getMessage(); echo json_encode($xAC063X21); break; } $db = new SQLite3('bh.db'); $xXcb167X9 = $db->query("SELECT src, dest from page where id=$num"); $row = $xXcb167X9->fetchArray(); $xAC063X21['destPath'] = $row['dest']; $i = $row['src']; $xXcb167X9 = $db->query("SELECT path from source where id=$i"); $row = $xXcb167X9->fetchArray(); if(empty($row['path'])) $xAC063X21['srcFname'] = ''; else $xAC063X21['srcFname'] = basename($row['path']); $db->close();  if(file_exists('warning')) $xAC063X21['stat'] = 'warning';  if(file_exists('error')) $xAC063X21['stat'] = 'error';  if($btnlr == 3) { $xx85188XA = file_get_contents($xAC063X21['destPath']); $s = array( '/a__z\[\'f\'\]=\'(o|r)\';/', '#__public/#', '#__google/#' );      $r = array( "a__z['f']='x';", '__PUBLIC/', '__GOOGLE/' );      $xx85188XA = preg_replace($s, $r, $xx85188XA);   file_put_contents($xAC063X21['destPath'], $xx85188XA); }  echo json_encode($xAC063X21); break;  case 'ajax_appendWebRoot': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok'); $xx85188XA = if_file_get_contents('snap/cp_taSource'); if($xx85188XA != "") $xx85188XA .= '\\n'; $xx85188XA .= $xA91113X0['webstr']; $xAC063X21['box'] = sortSourceBox($xx85188XA, $xA91113X0['dosort']); echo json_encode($xAC063X21); break;  case 'ajax_delTree': require_once($iccheckLoc); $dir = $xA91113X0['dir']; if(is_dir($dir)) delTreeJ($dir); break;  case 'ajax_autoSource1': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok'); $xa0e17bXc = $xA91113X0['sfile'];   $pfolder = $xA91113X0['pfolder']; $mstr1 = $xA91113X0['mstr1'];   $mstr2 = $xA91113X0['mstr2']; $mcb1 = $xA91113X0['mcb1'];     $mcb2 = $xA91113X0['mcb2']; $x504beXa9 = '.php'; if($xA91113X0['ux']) { $pos = strrpos($xa0e17bXc, '.'); if($pos !== false) { $x504beXa9 = substr($xa0e17bXc, $pos); } }  $genf = '.asg.';  if( ($mcb1) && (!file_exists('tmp/.as1/content1')) ) { $xAC063X21['stat'] = 'nocont1'; } else if( $mcb2 && (!file_exists('tmp/.as1/content2')) ) { $xAC063X21['stat'] = 'nocont2'; } if($xAC063X21['stat'] != 'ok') { echo json_encode($xAC063X21); break; }  if(!is_file("../$pfolder/$xa0e17bXc")) { $xAC063X21 = array('stat'=>'nosource'); echo json_encode($xAC063X21); break; }   $priFirst = true;  $sd = file_get_contents("../$pfolder/$xa0e17bXc"); $pos1 = strpos($sd, $mstr1); if($pos1 === false) { $xAC063X21 = array('stat'=>'nomark1'); echo json_encode($xAC063X21); break; } if(! $mcb2) { $ar = explode($mstr1, $sd, 2); $sdataTop = $ar[0]; $sdataMid = ''; $sdataBtm = $ar[1]; } else { $pos2 = strpos($sd, $mstr2); if($pos2 === false) { $xAC063X21 = array('stat'=>'nomark2'); echo json_encode($xAC063X21); break; } if($pos1 < $pos2) { $ar = explode($mstr1, $sd, 2); $sdataTop = $ar[0]; $ar = explode($mstr2, $ar[1], 2); $sdataMid = $ar[0]; $sdataBtm = $ar[1]; } else { $priFirst = false; $ar = explode($mstr2, $sd, 2); $sdataTop = $ar[0]; $ar = explode($mstr1, $ar[1], 2); $sdataMid = $ar[0]; $sdataBtm = $ar[1]; } }  $theArray1 = array(); $dh = opendir("tmp/.as1/content1"); while($fn = readdir($dh)) { if( $fn == '.' || $fn == '..' ) continue; if( (strlen($fn) > 9) && ( substr($fn, -9) == '_full.txt') ) continue; $theArray1[] = $fn; } closedir($dh);                if(empty($theArray1)) { $xAC063X21 = array('stat'=>'noart1'); echo json_encode($xAC063X21); break; }  $theArray2 = array(); if($mcb2) { $dh = opendir("tmp/.as1/content2"); while($fn = readdir($dh)) { if( $fn == '.' || $fn == '..' ) continue; if( (strlen($fn) > 9) && (substr($fn, -9) == '_full.txt') ) continue; $theArray2[] = $fn; } closedir($dh);                if(empty($theArray2)) { $xAC063X21 = array('stat'=>'noart1'); echo json_encode($xAC063X21); break; } $fcount2 = count($theArray2); $findex2 = 0; }  if(is_dir("../$pfolder/$genf")) delTreeJ("../$pfolder/$genf"); mkdir("../$pfolder/$genf", 0777, true);  $ar_sbox = array(); $ar = explode('\n', file_get_contents('./snap/cp_taSource') ); foreach($ar as $line) { if(substr($line, 0, 6) == '[group') continue; $ar_sbox[] = $line; }  $xAC063X21['cntS'] = 0; $fnum = 0; foreach($theArray1 as $fn) { $fnum ++; $sfn = 'sf-'.$fnum.'.php'; $ar_sbox[] = '[group] '.$pfolder.'/'.$genf.'/'.$sfn.' >> '.$x504beXa9;  $fdata1 = file_get_contents("tmp/.as1/content1/$fn"); if(substr($fdata1, 0, 3) == "\xEF\xBB\xBF") $fdata1 = substr($fdata1, 3); else $fdata1 = utf16_to_utf8($fdata1);  $fdata2 = ''; if($mcb2) { $fn2 = $theArray2[$findex2]; $findex2++; if($findex2 >= $fcount2) $findex2 = 0;  $fdata2 = file_get_contents("tmp/.as1/content2/$fn2"); if(substr($fdata2, 0, 3) == "\xEF\xBB\xBF") $fdata2 = substr($fdata2, 3); else $fdata2 = utf16_to_utf8($fdata2); }  $xAC063X21['cntS']++;   if(!$mcb2) { file_put_contents("../$pfolder/$genf/$sfn", "$sdataTop$fdata1$sdataBtm"); } else { if($priFirst) file_put_contents("../$pfolder/$genf/$sfn", "$sdataTop$fdata1$sdataMid$fdata2$sdataBtm"); else file_put_contents("../$pfolder/$genf/$sfn", "$sdataTop$fdata2$sdataMid$fdata1$sdataBtm"); } }  $xAC063X21['sbox'] = sortSourceBox( implode('\\n', $ar_sbox), $xA91113X0['dosort'] );   echo json_encode($xAC063X21); break;  case 'kE7b20Xad': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'ok'); $kwsPath = $xA91113X0['kwsPath']; $kwsName = $xA91113X0['kwsName']; $kwsWrite = $xA91113X0['kwsWrite']; $kwsMatch = $xA91113X0['kwsMatch']; $xa0e17bXc = $xA91113X0['sfile'];   $pfolder = $xA91113X0['pfolder']; $mstr1 = $xA91113X0['mstr1'];   $mstr2 = $xA91113X0['mstr2']; $mcb1 = $xA91113X0['mcb1'];     $mcb2 = $xA91113X0['mcb2']; $x504beXa9 = '.php'; if($xA91113X0['ux']) { $pos = strrpos($xa0e17bXc, '.'); if($pos !== false) { $x504beXa9 = substr($xa0e17bXc, $pos); } } $genf = '.as.';  if( ($mcb1) && (!file_exists('tmp/.as/content1')) ) { $xAC063X21['stat'] = 'nocont1'; } else if( $mcb2 && (!file_exists('tmp/.as/content2')) ) { $xAC063X21['stat'] = 'nocont2'; } if($xAC063X21['stat'] != 'ok') { echo json_encode($xAC063X21); break; }  if(!is_file("../$pfolder/$xa0e17bXc")) { $xAC063X21 = array('stat'=>'nosource'); echo json_encode($xAC063X21); break; }   $priFirst = true;  $sd = file_get_contents("../$pfolder/$xa0e17bXc"); $pos1 = strpos($sd, $mstr1); if($pos1 === false) { $xAC063X21 = array('stat'=>'nomark1'); echo json_encode($xAC063X21); break; } if(! $mcb2) { $ar = explode($mstr1, $sd, 2); $sdataTop = $ar[0]; $sdataMid = ''; $sdataBtm = $ar[1]; } else { $pos2 = strpos($sd, $mstr2); if($pos2 === false) { $xAC063X21 = array('stat'=>'nomark2'); echo json_encode($xAC063X21); break; } if($pos1 < $pos2) { $ar = explode($mstr1, $sd, 2); $sdataTop = $ar[0]; $ar = explode($mstr2, $ar[1], 2); $sdataMid = $ar[0]; $sdataBtm = $ar[1]; } else { $priFirst = false; $ar = explode($mstr2, $sd, 2); $sdataTop = $ar[0]; $ar = explode($mstr1, $ar[1], 2); $sdataMid = $ar[0]; $sdataBtm = $ar[1]; } }  $theArray = array(); $dh = opendir("tmp/.as/content1"); while($fn = readdir($dh)) { if( (strlen($fn) > 9) && (substr($fn, -9) == '_full.txt') ) continue; if( preg_match('/^(.*?) \(\d+\)\.(?:html|txt)$/', $fn, $m) == 1) $theArray[strtolower($m[1])][] = $m[0];  if( preg_match('/^(.*?) \([0-9a-fA-F]+\)\.(?:html|txt)$/', $fn, $m) == 1) $theArray[strtolower($m[1])][] = $m[0];  else if( preg_match('/^(.*?) \d+\.(?:html|txt)$/', $fn, $m) == 1) $theArray[strtolower($m[1])][] = $m[0]; else if( preg_match('/^(.*?)\.(?:html|txt)$/', $fn, $m) == 1) $theArray[strtolower($m[1])][] = $m[0];     } closedir($dh); if(empty($theArray)) { $xAC063X21 = array('stat'=>'nocontent'); echo json_encode($xAC063X21); break; }   if( $mcb2 && (!$kwsMatch) ) { $ar_files2 = array();  $dh = opendir("tmp/.as/content2"); while($fn = readdir($dh)) { if( $fn == '.' || $fn == '..' ) continue; $ar_files2[] = $fn; } closedir($dh);                $fcount2 = count($ar_files2); $findex2 = 0; }  if(is_dir("../$pfolder/$genf")) delTreeJ("../$pfolder/$genf"); mkdir("../$pfolder/$genf", 0777, true);  $ar_sbox = array(); $ar = explode('\n', file_get_contents('./snap/cp_taSource') ); foreach($ar as $line) { if(substr($line, 0, 6) == '[group') continue; $ar_sbox[] = $line; }  if($kwsWrite) file_put_contents("snap/cp_taPath$kwsPath", ''); $ar_kws = array(); $xAC063X21['cntS'] = 0; $xAC063X21['cntK'] = 0;  foreach($theArray as $kw => $fn) { $xAC063X21['cntK']++; if($kwsWrite) $ar_kws[] = $kw;  foreach($theArray[$kw] as $fn) { $ar_sbox[] = '[group:'.$kwsName.'='.$kw.'] '.$pfolder.'/'.$genf.'/'.$fn.' >> '.$x504beXa9;  $fdata1 = file_get_contents("tmp/.as/content1/$fn"); if(substr($fdata1, 0, 3) == "\xEF\xBB\xBF") $fdata1 = substr($fdata1, 3); else $fdata1 = utf16_to_utf8($fdata1);  if($mcb2) { if($kwsMatch) { if(! file_exists("tmp/.as/content2/$fn")) { $fdata2 = ''; } else { $fdata2 = file_get_contents("tmp/.as/content2/$fn"); if(substr($fdata2, 0, 3) == "\xEF\xBB\xBF") $fdata2 = substr($fdata2, 3); else $fdata2 = utf16_to_utf8($fdata2); } } else {  $fn2 = $ar_files2[$findex2]; $findex2++; if($findex2 >= $fcount2) $findex2 = 0;  $fdata2 = file_get_contents("tmp/.as/content2/$fn2"); if(substr($fdata2, 0, 3) == "\xEF\xBB\xBF") $fdata2 = substr($fdata2, 3); else $fdata2 = utf16_to_utf8($fdata2); } }  $xAC063X21['cntS']++;  if(!$mcb2) { file_put_contents("../$pfolder/$genf/$fn", "$sdataTop$fdata1$sdataBtm"); } else { if($priFirst) file_put_contents("../$pfolder/$genf/$fn", "$sdataTop$fdata1$sdataMid$fdata2$sdataBtm"); else file_put_contents("../$pfolder/$genf/$fn", "$sdataTop$fdata2$sdataMid$fdata1$sdataBtm"); } } }  $xAC063X21['sbox'] = sortSourceBox( implode('\\n', $ar_sbox), $xA91113X0['dosort'] );   $xAC063X21['kbox'] = ''; if($kwsWrite) { file_put_contents('snap/cp_taPath'.$kwsPath, implode('\\n', $ar_kws)); $xAC063X21['kbox'] = implode("\n", $ar_kws); } echo json_encode($xAC063X21); break;  case 'ajax_sortPath': $xAC063X21 = array('stat'=>'ng', 'boxdata'=>''); $xx85188XA = @file_get_contents('snap/cp_taPath'.$xA91113X0['pathnum']); if( ($xx85188XA == "") || (strpos($xx85188XA, '\n') === false) ) { echo json_encode($xAC063X21); break; } $ar = explode('\n', $xx85188XA);  if($xA91113X0['sortby'] == 'random') { if(! shuffle($ar)) { echo json_encode($xAC063X21); break; } $xx85188XA = implode('\n', $ar); $box = implode("\n", $ar); } else { if(! sort($ar)) { echo json_encode($xAC063X21); break; } $xx85188XA = implode('\n', $ar); $box = implode("\n", $ar); } @file_put_contents('snap/cp_taPath'.$xA91113X0['pathnum'], $xx85188XA); $xAC063X21['stat'] = 'ok'; $xAC063X21['boxdata'] = $box."\n"; echo json_encode($xAC063X21); break;  case 'ajax_sortSrcGroup': $xAC063X21 = array('stat'=>'ok', 'box'=>''); $xx85188XA = @file_get_contents('snap/cp_taSource'); if($xx85188XA == "") { $xAC063X21['stat'] = 'empty'; echo json_encode($xAC063X21); break; } $xAC063X21['box'] = sortSourceBox($xx85188XA, $xA91113X0['sortby']); $xAC063X21['firstSrc'] = $firstSrc; echo json_encode($xAC063X21); break;  case 'ajax_sortBoxS': $xAC063X21 = array('stat'=>'ok', 'box'=>''); $xx85188XA = @file_get_contents('snap/cp_taSource'); if($xx85188XA == "") { $xAC063X21['stat'] = 'empty'; echo json_encode($xAC063X21); break; } $xAC063X21['box'] = sortSourceBox($xx85188XA, $xA91113X0['dosort']); $xAC063X21['firstSrc'] = $firstSrc; echo json_encode($xAC063X21); break;  case 'ajax_setSrcExten': $xAC063X21 = array('stat'=>'ok', 'box'=>''); $xx85188XA = @file_get_contents('snap/cp_taSource'); if($xx85188XA == "") { $xAC063X21['stat'] = 'empty'; echo json_encode($xAC063X21); break; }  $ar = explode('\\n', $xx85188XA); $xAE0118X8 = count($ar); for($x=0; $x<$xAE0118X8; $x++) { $line = $ar[$x]; if( preg_match('/^\[(webroot|asset)\]/', $line) == 1) continue; if( strpos($line, '>') === false) $line .= ' > '.$line; if($xA91113X0['ext'] == 'html2php') { if( preg_match('/^(.*?)\.html$/i', $line, $m) == 1 ) $line = "$m[1].php"; } else { if( preg_match('/^(.*?)\.php$/i', $line, $m) == 1 ) $line = "$m[1].html"; }  $ar[$x] = $line; }  file_put_contents( 'snap/cp_taSource', implode('\\n', $ar) ); $xAC063X21['box'] = implode("\n", $ar); echo json_encode($xAC063X21); break;  case 'ajax_bindPaths': $xAC063X21 = array('stat'=>'ok', 'box'=>''); $ifrom = $xA91113X0['ifrom']; $sfrom = $xA91113X0['sfrom']; $ito = $xA91113X0['ito']; $sto = $xA91113X0['sto']; $text = $xA91113X0['text'];  $xx85188XA = @file_get_contents('snap/cp_taPath'.$ifrom); $xx85188XA = trim($xx85188XA); if($xx85188XA == "") { $xAC063X21['stat'] = 'empty'; echo json_encode($xAC063X21); break; } $xx85188XA = preg_replace('/\[.+?\]/', '', $xx85188XA); $ar_from = explode('\\n', $xx85188XA);  $ar_to = array(); if($xA91113X0['wtype'] != 'ov') { $xx85188XA = @file_get_contents('snap/cp_taPath'.$ito); $xx85188XA = trim($xx85188XA); if($xx85188XA != '') $ar_to = explode('\\n', $xx85188XA); }  foreach($ar_from as $item) { $item = trim($item); $item = rtrim($item, '/'); $ar_to[] = '['.$sfrom.'='.$item.'] '.$item.$text; }  @file_put_contents( 'snap/cp_taPath'.$ito, implode('\n', $ar_to) ); $xAC063X21['box'] = implode("\n", $ar_to)."\n"; echo json_encode($xAC063X21); break;  case 'y6b643Xc0': $arSTATES = array( 'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming', 'al', 'ak', 'az', 'ar', 'ca', 'co', 'ct', 'de', 'fl', 'ga', 'hi', 'id', 'il', 'in', 'ia', 'ks', 'ky', 'la', 'me', 'md', 'ma', 'mi', 'mn', 'ms', 'mo', 'mt', 'ne', 'nv', 'nh', 'nj', 'nm', 'ny', 'nc', 'nd', 'oh', 'ok', 'or', 'pa', 'ri', 'sc', 'sd', 'tn', 'tx', 'ut', 'vt', 'va', 'wa', 'wv', 'wi', 'wy' );  $x1ee68XE4 = array('small', 'medium', 'large'); $sz = $x1ee68XE4[$xA91113X0['sizeC']-1]; $arCnum = @file('http://masspagecreator.com/lists/geotarget_us_'.$sz, FILE_IGNORE_NEW_LINES); $arSS = explode(',', $xA91113X0['strSS']);  $ar = array('', '//', '/'); $sf = $ar[$xA91113X0['stateSF']]; $cf = $ar[$xA91113X0['citySF']]; $FsnapS = fopen('snap/cp_taPath'.$xA91113X0['pathS'], 'w'); $FsnapC  = fopen('snap/cp_taPath'.$xA91113X0['pathC'], 'w'); $xAC063X21 = array('stat'=>'ng', 'states'=>"", 'cities'=>""); $abb = $xA91113X0['abb']; $ccr = ""; foreach($arSS as $i) { $sname = $arSTATES[$i]; $sname_ab = strtolower($arSTATES[$i+$abb]); fwrite($FsnapS, "$ccr$sname_ab$sf"); $xAC063X21['states'] .= "$sname_ab$sf\n";  $fm = '['.$xA91113X0['custS'].'='.$sname_ab.'] '; $cu = "http://masspagecreator.com/lists/United States/$sname/Cities (".$arCnum[$i].")"; $cu = str_replace(' ', '%20', $cu); $arCnames = file( $cu, FILE_IGNORE_NEW_LINES); foreach($arCnames as $x95x8bXbF) { $x95x8bXbF = strtolower($x95x8bXbF); fwrite($FsnapC, "$ccr$fm$x95x8bXbF$cf"); $xAC063X21['cities'] .= "$fm$x95x8bXbF$cf\n"; $ccr = '\\n'; } }  fclose($FsnapS); fclose($FsnapC);  $xAC063X21['stat'] = 'ok'; echo json_encode($xAC063X21); break;  case 'a0dE1fXCF': require_once($iccheckLoc); $ar = scandir($xA91113X0['domroot']); if(! $ar) { echo 'none'; break; } $xAC063X21 = array();  foreach($ar as $fn) { if( substr($fn, -10) == '-index.xml') continue; $x504beXa9 = substr($fn,-4); if(! $x504beXa9) continue; if( strtolower($x504beXa9) != '.xml') continue; $xAC063X21[] = $fn; } if(empty($xAC063X21)) { echo 'none'; break; } echo json_encode($xAC063X21); break;  case 'ajax_delXml': require_once($iccheckLoc); $dotdot = $xA91113X0['domroot']; $iname = $xA91113X0['iname'].'-index.xml'; $dom = str_replace('^', '.', $xA91113X0['domcaret']); $xAE0118X8 = strlen($dom.'/'); $status = 'noindex';  if(file_exists($dotdot.$iname)) { $xml = simplexml_load_file($dotdot.$iname); foreach($xml as $sitemap) { $loc = (string)$sitemap->loc; $fn = substr($loc, $xAE0118X8); if(file_exists($dotdot.$fn)) unlink($dotdot.$fn); } unlink($dotdot.$iname);  if(file_exists($dotdot.'robots.txt')) { $xx85188XA = file_get_contents($dotdot.'robots.txt'); $xx85188XA = str_ireplace("Sitemap: $dom/$iname\n", '', $xx85188XA); file_put_contents($dotdot.'robots.txt', $xx85188XA); } $status = 'ok'; }  echo $status; break;  case 'aG7525X8F': require_once($iccheckLoc); require_once "./class_dbase.php"; $dotdot = $xA91113X0['domroot']; $xname = $xA91113X0['xname']; $iname = $xA91113X0['xindex'].'-index.xml'; $maxlines = $xA91113X0['xmax']; $bname = $xA91113X0['bname'].'/';  if($xA91113X0['icloud'] == 1) { $dotdot = 'cloudxml/'; if($xA91113X0['memwriteto'] == 'ama_website') $bname = ''; } else { $bname = ''; }  $dom = str_replace('^', '.', $xA91113X0['dom']); $domsub = str_replace('^', '.', $xA91113X0['domsub']); $db = new dbase('.', 'xml.db'); $xdB78cXdE = $db->dumpAllXmlPages($domsub, 'xml.txt', $maxlines); $db->close;  if($xdB78cXdE == 0) { echo 'ng'; break; }  $ar_index = array(); if(file_exists($dotdot.$iname)) { $xml = simplexml_load_file($dotdot.$iname); foreach($xml as $sitemap) { $loc = (string)$sitemap->loc; $ar_index[$loc] = 1; } }  $fn = $xname.'.xml'; $xF0F1beXf = 0; for($x=0;$x<$xdB78cXdE;$x++) { $xF0F1beXf++;  writeFileXml($dotdot, $fn, $xF0F1beXf);     $ar_index[$dom.'/'.$bname.$fn] = 1; $fn = $xname.'-'.$xF0F1beXf.'.xml'; }  $fp = fopen($dotdot.$iname, 'w'); fwrite($fp, '<?xml version="1.0" encoding="UTF-8"?>'."\n"); fwrite($fp, '<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'."\n"); foreach($ar_index as $key => $val) { fwrite($fp, '<sitemap><loc>'.$key.'</loc></sitemap>'."\n"); } fwrite($fp, '</sitemapindex>'."\n"); fclose($fp);  if($xA91113X0['icloud'] != 1) setRobot($dotdot, $iname, $dom);  echo 'ok'; break;  case 'a9AE26Xc0': require_once($iccheckLoc); require_once "./class_dbase.php"; $dotdot = $xA91113X0['domroot']; $xname = $xA91113X0['xname']; $iname = $xA91113X0['xindex'].'-index.xml'; $maxlines = $xA91113X0['xmax']; $dom = str_replace('^', '.', $xA91113X0['dom']); $domsub = str_replace('^', '.', $xA91113X0['domsub']);  $db = new dbase('.', 'xml.db'); $xdB78cXdE = $db->dumpAllXmlPages($domsub, 'xml.txt', $maxlines); $db->close;  if($xdB78cXdE == 0) { echo 'ng'; break; }  $ar_index = array(); if(file_exists($dotdot.$iname)) { $xml = simplexml_load_file($dotdot.$iname); foreach($xml as $sitemap) { $loc = (string)$sitemap->loc; $ar_index[$loc] = 1; } }  $fn = $xname.'.xml'; $xF0F1beXf = 0; for($x=0;$x<$xdB78cXdE;$x++) { $fn = getUnique($dotdot, $fn); $xF0F1beXf++;  writeFileXml($dotdot, $fn, $xF0F1beXf); $ar_index[$dom.'/'.$fn] = 1;     $fn = $xname.'-'.$xF0F1beXf.'.xml'; }  $fp = fopen($dotdot.$iname, 'w'); fwrite($fp, '<?xml version="1.0" encoding="UTF-8"?>'."\n"); fwrite($fp, '<sitemapindex xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'."\n"); foreach($ar_index as $key => $val) { fwrite($fp, '<sitemap><loc>'.$key.'</loc></sitemap>'."\n"); } fwrite($fp, '</sitemapindex>'."\n"); fclose($fp);  setRobot($dotdot, $iname, $dom);  echo 'ok'; break;  case 'jbG41bX7E': require_once($iccheckLoc); $ftpjstr = 'xxx'; include('uploads/' . $xA91113X0['fname']); if( strlen($ftpjstr) < 15) echo 'error'; else echo $ftpjstr; break;  case 'ajax_listAddWroot': require_once($iccheckLoc); $dotdot = $xA91113X0['domroot']; $mpcdir = $xA91113X0['theFnameFld']; $xAC063X21 = array('status'=>'none', 'msg'=>'');  $d = opendir($dotdot); if(! $d) { $xAC063X21['status'] = 'err'; echo json_encode($xAC063X21); break; } $xa4666Xxe = array(); while (false !== ($xefXb5X80 = readdir($d))) { if( ($xefXb5X80 == '.') || ($xefXb5X80 == '..') || ($xefXb5X80 == $mpcdir) ) continue; $fm = (is_dir($dotdot.$xefXb5X80))? '/': ''; $xa4666Xxe[] = "$xefXb5X80$fm"; } closedir($d); if(! empty($xa4666Xxe)) { sort($xa4666Xxe); $xAC063X21['msg'] = implode(',',  $xa4666Xxe); $xAC063X21['status'] = 'ok'; } echo json_encode($xAC063X21); break;  case 'ajax_listWroot': require_once($iccheckLoc); $dotdot = $xA91113X0['domroot']; $xAC063X21 = array('status'=>'none', 'msg'=>'');  $d = opendir($dotdot); if(! $d) { $xAC063X21['status'] = 'err'; echo json_encode($xAC063X21); break; } $xa4666Xxe = array(); while (false !== ($xefXb5X80 = readdir($d))) { if(! is_file($dotdot.$xefXb5X80) ) continue; $xa4666Xxe[] = $xefXb5X80; } closedir($d); if(! empty($xa4666Xxe)) { sort($xa4666Xxe); $xAC063X21['msg'] = implode('/',  $xa4666Xxe); $xAC063X21['status'] = 'ok'; } echo json_encode($xAC063X21); break;  case 'yCCc55X5A': require_once($iccheckLoc); $wbucket = $xA91113X0['wbucket']; $caller = $xA91113X0['caller']; if($caller == 'xml') { require_once('s3settings.php'); $j3 = json_decode($s3jstr, true); $s3key = $j3['key']; $s3secret = $j3['secret']; $wbucket = $j3['wbucket']; if($xA91113X0['wbucket'] != '!') $wbucket = $xA91113X0['wbucket']; } else { $s3key = $xA91113X0['key']; $s3secret = $xA91113X0['secret']; }  require 'aws/aws-autoloader.php'; $s3Client = Aws\S3\S3Client::factory(array( 'credentials' => array( 'key' => $s3key, 'secret' => $s3secret ), 'region' => $xA91113X0['region'], 'version' => '2006-03-01' )); $xAC063X21 = array('status'=>'', 'msg'=>'');  try { $buckets = $s3Client->listBuckets(); } catch (Aws\S3\Exception\S3Exception $e) { $xAC063X21['status'] = ($caller != 'build')? 'bad_key_test' : 'bad_key_build'; $em = $e->getMessage(); if(preg_match('/(curl error \d+)/i', $em, $m) == 1) { $xAC063X21['msg'] = $m[1]; } else { file_put_contents('mpcerr_log', "$em\n", FILE_APPEND); } echo json_encode($xAC063X21); break; } if( ($caller == 'build') || ($caller == 'xml') ) { $bname = $xA91113X0['bucketname'];  if(! $xA91113X0['bslash_ok']) { $xAC063X21['status'] = 'ng_bucket'; $xAC063X21['msg'] = 'Bucket must be a Folder or Silo'; echo json_encode($xAC063X21); break; } if(! $xA91113X0['bcount_ok']) { $xAC063X21['status'] = 'ng_bucket'; $xAC063X21['msg'] = 'Only one bucket name allowed in first Path'; echo json_encode($xAC063X21); break; }  $bMatch = false; foreach($buckets['Buckets'] as $bucket) { if($bucket['Name'] != $bname) continue; $bMatch = true; break; } if(! $bMatch) { $xAC063X21['status'] = 'ng_bucket'; $xAC063X21['msg'] = "Bucket <b>$bname</b> not found in your S3 account"; echo json_encode($xAC063X21); break; } $xAC063X21['msg'] = $bname; }      $ar = array( 'key' => $s3key, 'secret' => $s3secret, 'region' => $xA91113X0['region'], 'wbucket' => $wbucket ); $xd8d114X9  = json_encode($ar); file_put_contents("s3settings.php", "<?php\n\$s3jstr = '".$xd8d114X9."';\n?>\n");  $xAC063X21['status'] = ($caller == 'build')? 'ok_build' : 'ok_test'; echo json_encode($xAC063X21); break;  case 'y0Ax56XAx': require_once($iccheckLoc); require_once('s3settings.php');  if(! empty($xA91113X0['robots']) ) { file_put_contents($xA91113X0['fromdir'].'/robots.txt', $xA91113X0['robots']); }  $j3 = json_decode($s3jstr, true); $xAC063X21 = array('status'=>'ok_upload', 'msg'=>'');  require('aws/aws-autoloader.php'); $s3Client = Aws\S3\S3Client::factory(array( 'credentials' => array( 'key' => $j3['key'], 'secret' => $j3['secret'] ), 'region' => $xA91113X0['region'], 'version' => '2006-03-01' ));  $manager = new Aws\S3\Transfer($s3Client, $xA91113X0['fromdir'], 's3://'.$xA91113X0['bucket'], array( 'concurrency' => 20, 'before' => function(Aws\Command $command) { if($command->getName() == 'PutObject') { $command['ACL'] = 'public-read'; } } ) );  try { $manager->transfer(); } catch (Aws\S3\Exception\S3Exception $e) { $xAC063X21['status'] = 'ex_error'; $xAC063X21['msg'] = 'Have you selected the correct S3 Region?'; } echo json_encode($xAC063X21); break;  case 'jfcf1cXxf': echo file_get_contents('settings'); break;  case 'jebF1dXC9': require_once($iccheckLoc); $ftpjstr = 'xxx'; include('ftpsettings.php'); echo $ftpjstr; break;  case 'ajax_readPxSettings': require_once($iccheckLoc); $pxjstr = 'xxx'; include('pxsettings.php'); echo $pxjstr; break;  case 'ajax_zipMpcSettings': require_once($iccheckLoc); $xD541c6Xe = $xA91113X0['zname']; require_once "../$xD541c6Xe"; file_put_contents('setsig.php', $xA91113X0['ver']); $ar = array( 'setsig.php', 'artsettings.php', 'cf_arsettings.php', 'ipgsettings.php', 's3settings.php', 'settings', 'spinsettings.php', 'utsettings.php' ); $xx85188XA = ''; foreach($ar as $fn) { if(file_exists($fn)) $xx85188XA .= $fn.','; } $xx85188XA = trim($xx85188XA, ','); if(file_exists('mpcset.zip')) unlink('mpcset.zip'); $zip = new PclZip('mpcset.zip'); $zip->create($xx85188XA); echo 'ok'; break;  case 'ajax_updateMpcSettings': require_once($iccheckLoc); $xD541c6Xe = $xA91113X0['zname']; require_once "../$xD541c6Xe"; $flist = trim($xA91113X0['flist'], ','); $xAC063X21 = array( 'status' => 'ok', 'theme' => 'no', 'count' => 0, 'restart' => $xA91113X0['restart'] );  $zip = new PclZip('uploads/'.$xA91113X0['fn']); try { $zip->extract(PCLZIP_OPT_PATH, 'uploads/mpcset',PCLZIP_OPT_REPLACE_NEWER); } catch (Exception $e) { $emsg = $e->getMessage(); trigger_error($emsg, E_USER_ERROR); $xAC063X21['status'] = 'except'; $xAC063X21['msg'] = 'Zip file exception'; @unlink('uploads/'.$xA91113X0['fn']); echo json_encode($xAC063X21); break; } if(! file_exists('uploads/mpcset/setsig.php') ) { $xAC063X21['status'] = 'nosig'; $xAC063X21['msg'] = 'Not a Settings file'; @unlink('uploads/'.$xA91113X0['fn']); echo json_encode($xAC063X21); break; }  unlink('uploads/mpcset/setsig.php'); @unlink('uploads/'.$xA91113X0['fn']); $ar_flist = explode(',', $flist);  foreach($ar_flist as $fname) { $fn_aux = $fname; $fn_upp = 'uploads/mpcset/'.$fname;  if(! file_exists($fn_upp) ) continue;  if(! file_exists($fn_aux) ) { rename($fn_upp, $fn_aux); chmod($fn_aux, 0644); continue; }  switch($fname) { case 'settings': $ar_aux = json_decode(file_get_contents($fn_aux), true); $ar_upp = json_decode(file_get_contents($fn_upp), true); if( ($ar_aux['qetrigger'] != $ar_upp['qetrigger']) || ($ar_aux['dowp'] != $ar_upp['dowp']) ) $xAC063X21[restart] = true;  foreach($ar_upp as $k => $v) { $ar_aux[$k] = $v; }  $xAC063X21['theme'] = $ar_aux['theme']; $xAC063X21['jstr'] = json_encode($ar_aux);  file_put_contents( $fn_aux, $xAC063X21['jstr'] ); $xAC063X21['count']++; break;  case 'cf_arsettings.php': case 'ipgsettings.php': rename($fn_upp, $fn_aux); chmod($fn_aux, 0644); $xAC063X21['count']++; break;  case 's3settings.php': case 'artsettings.php': case 'spinsettings.php': $xx85188XA = file_get_contents($fn_aux); if( preg_match("/\\$(.*?)\s*=\s*\'(\{.*?\})\';/", $xx85188XA, $m) != 1) { break; } $thevar = $m[1]; $ar_aux = json_decode($m[2], true);  $xx85188XA = file_get_contents($fn_upp); if( preg_match("/\\$(.*?)\s*=\s*\'(\{.*?\})\';/", $xx85188XA, $m) != 1) { break; } $ar_upp = json_decode($m[2], true);  foreach($ar_upp as $k => $v) { $ar_aux[$k] = $v; }  $xd8d114X9 = json_encode($ar_aux); file_put_contents("$fn_aux", "<?php\n\$".$thevar." = '".$xd8d114X9."';\n?>\n"); chmod("$fn_aux", 0644); $xAC063X21['count']++; break;  case 'utsettings.php': $ar_aux = json_decode(file_get_contents($fn_aux), true); $ar_upp = json_decode(file_get_contents($fn_upp), true); foreach($ar_upp as $k => $v) { $ar_aux[$k] = $v; } file_put_contents( $fn_aux, json_encode($ar_aux) ); $xAC063X21['count']++; break; }  } echo json_encode($xAC063X21); break;   case 'ajax_saveCFsettings': require_once($iccheckLoc); $xx85188XA = $xA91113X0['cfs']; file_put_contents('cf_arsettings.php', "<?php\n\$cfjstr = '".$xx85188XA."';\n?>\n"); echo 'ok'; break;  case 'y44C59X7b': require_once($iccheckLoc); loadCFentry($xA91113X0['domain'], $ar); $xAC063X21 = array( 'status' => 'ok', 'domain' => $ar['domain'], 'email' => $ar['email'], 'key' => $ar['key'] );  if( ($ar['email'] == '') || ($ar['key'] == '') ) { $xAC063X21['status'] = 'nosettings'; echo json_encode($xAC063X21); break; } require('cf_arsettings.php');   $xAC063X21['cf_set'] = $cfjstr; echo json_encode($xAC063X21); break;  case 'ajax_testCF': require_once($iccheckLoc);  $xAC063X21 = array( 'status' => 'ok', 'domain' => $xA91113X0['domain'], 'email' => $xA91113X0['email'], 'key' => $xA91113X0['key'] );  cflare_get_zone_id($xAC063X21); echo json_encode($xAC063X21); break;  case 'ajax_preBCF': require_once($iccheckLoc); loadCFentry($xA91113X0['domain'], $ar); $xAC063X21 = array( 'status' => 'ok', 'domain' => $ar['domain'], 'email' => $ar['email'], 'key' => $ar['key'] );  if( ($ar['email'] == '') || ($ar['key'] == '') ) { $xAC063X21['status'] = 'nosettings'; echo json_encode($xAC063X21); break; }  if(! cflare_get_zone_id($xAC063X21) ) { echo json_encode($xAC063X21); break; }  cflare_get_devmode($xAC063X21); echo json_encode($xAC063X21); break;  case 'yAxf5aX2d': require_once($iccheckLoc); $xAC063X21 = array( 'status' => 'ok', 'email' => $xA91113X0['email'], 'key' => $xA91113X0['key'], 'zone' => $xA91113X0['zone'], 'domain' => $xA91113X0['domain'], 'onoff' => $xA91113X0['onoff'] );  if($xAC063X21['zone'] == '') { if(! cflare_get_zone_id($xAC063X21) ) { echo json_encode($xAC063X21); break; } } if(cflare_set_devmode($xAC063X21)) { saveCFentry($xAC063X21['domain'], $xAC063X21['email'], $xAC063X21['key']); } echo json_encode($xAC063X21); break;  case 'j21F21X2d': require_once($iccheckLoc); $j = $xA91113X0['parm_ajax'];  file_put_contents('settings', $xA91113X0['parm_ajax']); echo 'ok'; break;  case 'j9ad1eXdD': require_once($iccheckLoc); $xd8d114X9 = $xA91113X0['parm_ajax']; file_put_contents('ftpsettings.php', "<?php\n\$ftpjstr = '".$xd8d114X9."';\n?>\n"); break;  case 'ajax_writePxSettings': require_once($iccheckLoc); $xd8d114X9 = $xA91113X0['parm_ajax']; file_put_contents('pxsettings.php', "<?php\n\$pxjstr = '".$xd8d114X9."';\n?>\n"); break;  case 'yD0116XdG': require_once($iccheckLoc); file_put_contents('utsettings.php', $xA91113X0['parm_ajax']); echo 'ok'; break;  case 'yD0B23XF3': require_once($iccheckLoc); echo file_get_contents('utsettings.php'); break;  case 'ajax_readYelpSettings': require_once($iccheckLoc); echo file_get_contents('yelpsettings.php'); break;  case 'ajax_writeYelpSettings': require_once($iccheckLoc); file_put_contents('yelpsettings.php', $xA91113X0['parm_ajax']); echo 'ok'; break;  case 'ajax_testYelpApi': require_once($iccheckLoc); $mpc_qdata = $xA91113X0['qdata'].'&apitest=1'; include_once 'mpc_short_files/yelp.php'; break;  case 'ya5e18X1c': $xd  = 'part=id'; $xd .= '&type=video'; $xd .= '&videoEmbeddable=true'; $xd .= '&maxResults=12'; $xd .= '&fields=items/id'; $xd .= '&key='.rawurlencode($xA91113X0['api_ajax']); $xd .= '&q='.rawurlencode($xA91113X0['keyw_ajax']); $x0b37eX86 = curl_init('https://www.googleapis.com/youtube/v3/search?'.$xd); curl_setopt($x0b37eX86, CURLOPT_HEADER, 0); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $response = trim(curl_exec($x0b37eX86)); curl_close($x0b37eX86);  $xAC063X21 = array('stat'=>'ng');  try { $ut = json_decode($response); if(isset($ut->items[0]->id->videoId) ) { $xAC063X21['stat'] = 'ok'; $xdB78cXdE = count($ut->items); $xAC063X21['vid'] = $ut->items[rand(0,$xdB78cXdE-1)]->id->videoId; } } catch(Exception $e) { } if( ($xAC063X21['stat'] == 'ok') && ($xA91113X0['savefile']) ) { $xF0F1beXf = file_get_contents('utsettings.php'); $ar = json_decode($xF0F1beXf, true); $ar['api'] = $xA91113X0['api_ajax']; file_put_contents('utsettings.php', json_encode($ar)); } echo json_encode($xAC063X21); break;  case 'ajax_readBread': require_once($iccheckLoc); $xAC063X21 = array('status'=>'nofile', 'bcsfile'=>''); if( file_exists('breadsettings.php') ) { $xAC063X21['bcsfile'] = file_get_contents('breadsettings.php'); $xAC063X21['status'] = 'ok'; } echo json_encode($xAC063X21); break;  case 'ajax_writeBread': require_once($iccheckLoc); file_put_contents('breadsettings.php', $xA91113X0['mem_bread']); break;  case 'ajax_readSI': require_once($iccheckLoc); $style = $xA91113X0['style']; $stat = false; if(file_exists('sisettings')) { $stat = true; $xAC063X21 = json_decode( file_get_contents('sisettings'), true); } else $xAC063X21 = json_decode($xA91113X0['def'], true);  if(preg_match('/\[mpc-shortcode: silo_table (\d+),(.*?)table,(\w),(\d),(\d),(\d),(\d)/i', $xA91113X0['shortcode'], $m) == 1) { $stat = true; $xAC063X21['si_columns'] = $m[1]; $xAC063X21['si_class']   = $m[2]; $xAC063X21['si_case']    = $m[3]; $xAC063X21['yn_hide0']   = $m[4]; $xAC063X21['yn_hide1']   = $m[5]; $xAC063X21['yn_hide2']   = $m[6]; $xAC063X21['yn_hide3']   = $m[7]; }  if($style != '-') { $stat = true; $xAC063X21['si_link_ok'] = ( strpos($style, 'link_no') === false)? 1:0;  $s = array('/a:hover.*?color:/is', '/a:visited.*?color:/is', '/a:active.*?color:/is'); $r = array('hover:'              , ''                      , ''); $style = preg_replace($s, $r, $xA91113X0['style']);  preg_match_all('/([\w-]+\:.*?);/', $style, $mm);  $arnv = array(); foreach($mm[1] as $nv) { $ar = explode(':', $nv); $arnv[$ar[0]] = $ar[1]; } if(preg_match('/(\d+)(%|px)/', $arnv['width'], $m) == 1) { $xAC063X21['si_width'] = $m[1]; $xAC063X21['yn_pcent'] = ($m[2] == '%')? 1:0; } if(! empty($arnv['white-space']) ) $xAC063X21['yn_nowrap'] = ($arnv['white-space'] == 'nowrap')? 1:0; else $xAC063X21['yn_nowrap'] == 0; $xAC063X21['si_bgnd_color'] = trim($arnv['background'], '#'); $xAC063X21['si_txt_align'] = $arnv['text-align']; if(preg_match('/(\d+)px\s+(\d+)px/', $arnv['padding'], $m) == 1) { $xAC063X21['si_vpadding'] = $m[1]; $xAC063X21['si_hpadding'] = $m[2]; } $xAC063X21['si_spacing'] = trim($arnv['border-spacing'], 'px'); $xAC063X21['si_font_size'] = $arnv['font-size']; $xAC063X21['si_link_color'] = trim($arnv['color'], '#'); $xAC063X21['si_hover_color'] = trim($arnv['hover'], '#'); $xAC063X21['si_brd_collapse'] = ($arnv['border-collapse'] == 'separate')? 0:1; if($arnv['border'] == 'none') { $xAC063X21['si_brd_size'] = 0; } else { if(preg_match('/(\d+)px\s+(\w+)\s+#?(\w+)/', $arnv['border'], $m) == 1) { $xAC063X21['si_brd_size'] = $m[1]; $xAC063X21['si_brd_type'] = $m[2]; $xAC063X21['si_brd_color'] = $m[3]; } } }  if($stat) echo json_encode($xAC063X21); else echo 'none'; break;  case 'ajax_writeSI': require_once($iccheckLoc); file_put_contents('sisettings', $xA91113X0['mem_si']); break;  case 'y84e4eX9A': echo (postApi('http://www.spinrewriter.com/action/api', $xA91113X0) ); break;  case 'yXA749X0a': require_once($iccheckLoc); $spinjstr = 'xxx'; include('spinsettings.php'); echo $spinjstr; break;  case 'y9C64aX66': require_once($iccheckLoc); $xd8d114X9 = $xA91113X0['parm_ajax']; file_put_contents('spinsettings.php', "<?php\n\$spinjstr = '".$xd8d114X9."';\n?>\n"); break;  case 'ajax_updateSpinRewriter': require_once($iccheckLoc); $xA91113X0['action'] = 'api_quota'; $xF0F1beXf = postApi('http://www.spinrewriter.com/action/api', $xA91113X0); $ar = json_decode($xF0F1beXf, true); if($ar['status'] == 'OK') { include('spinsettings.php'); $xAC063X21 = json_decode($spinjstr, true); $xAC063X21['email_address' ] = $xA91113X0['email_address']; $xAC063X21['api_key' ] = $xA91113X0['api_key']; $xF0F1beXf = json_encode($xAC063X21); file_put_contents('spinsettings.php', "<?php\n\$spinjstr = '".$xF0F1beXf."';\n?>\n"); } echo json_encode($ar); break;  case 'y4094bX3f': require_once($iccheckLoc); $artjstr = 'xxx'; include('artsettings.php'); echo $artjstr; break;  case 'yX944cXce': require_once($iccheckLoc); $xd8d114X9 = $xA91113X0['parm_ajax']; file_put_contents('artsettings.php', "<?php\n\$artjstr = '".$xd8d114X9."';\n?>\n"); break;  case 'kFFX28XxX': echo file_get_contents('jsettings'); break;  case 'ajax_writeProjectSettings': require_once($iccheckLoc); $xAC063X21 = array('status'=>'ok'); file_put_contents('jsettings', $xA91113X0['parm_ajax']); $xAC063X21['tstamp'] = getTimestampJ($xA91113X0['tzone']);  echo json_encode($xAC063X21); break;  case 'kG7525X8F': if(!file_exists('initfile')) { $x6614XE05 = fopen('initfile','x'); fwrite($x6614XE05,1); fclose($x6614XE05); } else { $xF0F1beXf = file_get_contents('initfile'); $xF0F1beXf++; if($xF0F1beXf > 9) $xF0F1beXf = 1; file_put_contents('initfile',$xF0F1beXf); } break;    case 'a9ad1eXdD': $ar = array(); $ar['NAME'] = if_file_get_contents('snap/cp_Name'); $ar['DYNA'] = if_file_get_contents('../mpc_short_files/dyna_name.php'); $ar['SBOX'] = if_file_get_contents('snap/cp_taSource'); for($x=1;$x<6;$x++) { $ar['PBOX'.$x] = if_file_get_contents('snap/cp_taPath'.$x); $ar['PLAB'.$x] = if_file_get_contents('snap/cp_txPath'.$x); } for($x=1;$x<10;$x++) { $ar['VBOX'.$x] = if_file_get_contents('snap/cp_taVar'.$x); $ar['VLAB'.$x] = if_file_get_contents('snap/cp_txVar'.$x); } echo json_encode($ar); break;  case 'yx3X4fX90':  $xA91113X0['format'] = 'json'; echo (postApi('http://articlebuilder.net/api.php', $xA91113X0) ); break;  case 'ajax_update_artsettings': $xA91113X0['format'] = 'json'; $xx85188XA = (postApi('http://articlebuilder.net/api.php', $xA91113X0) ); $ar = json_decode($xx85188XA,true);  if($ar['success'] == 'true') { $artjstr = 'xxx'; include('artsettings.php'); if($artjstr != 'xxx') { $ar = json_decode($artjstr, true); $ar['username'] = $xA91113X0['username']; $ar['password'] = $xA91113X0['password']; $xd8d114X9 = json_encode($ar); file_put_contents('artsettings.php', "<?php\n\$artjstr = '".$xd8d114X9."';\n?>\n"); } } echo $xx85188XA; break;  case 'yXC950Xaa': require_once($iccheckLoc); $xAC063X21 = array('stat'=>'fileok'); $fname = $xA91113X0['fname']; $xD541c6Xe = $xA91113X0['theZname']; if($xA91113X0['bWebRoot'] == -1) { $dfpath = $xA91113X0['subfolder']; } else if($xA91113X0['bWebRoot'] == 1) { $dfpath = $xA91113X0['theWebRoot']; if($xA91113X0['subfolder'] != '') $dfpath .= '/'.$xA91113X0['subfolder']; } else $dfpath = '../'.$xA91113X0['subfolder'];  if(! is_dir($dfpath) ) { if(! mkdir($dfpath, 0777, true) ) { $xAC063X21['stat'] = 'mkdir_err'; echo json_encode($xAC063X21); break; } }  if( ($xA91113X0['bExZip'] == 1) && (preg_match('/\.zip$/i', $fname) == 1) ) { require_once "../$xD541c6Xe"; $xAC063X21['stat'] = 'zipok'; $zip = new PclZip("uploads/$fname"); $ar_zipInclude = array(); $ar_zipExclude = array(); try { $zc = getContainer($zip); } catch(Exception $e) { $xAC063X21['stat'] = 'ziperr'; $xAC063X21['msg'] = $e->getMessage(); if( file_exists("uploads/$fname") ) unlink("uploads/$fname"); echo json_encode($xAC063X21); break; }  $ar_zipInclude = array_diff($ar_zipInclude, $ar_zipExclude);                 $ar_zipDiff = array(); foreach($ar_zipInclude as $i) { $ar_zipDiff[] = $i; } $xAC063X21['container'] = $zc; if($zc == "") $xF0F1beXf = $zip->extract(PCLZIP_OPT_PATH, $dfpath, PCLZIP_OPT_REPLACE_NEWER ); else $xF0F1beXf = $zip->extract(PCLZIP_OPT_BY_INDEX, $ar_zipDiff, PCLZIP_OPT_PATH, $dfpath, PCLZIP_OPT_REPLACE_NEWER, PCLZIP_OPT_REMOVE_PATH, "$zc"); if($xF0F1beXf == 0) { $xAC063X21['stat'] = 'ziperr'; $xAC063X21['msg'] = $zip->errorInfo(true); } unlink("uploads/$fname"); } else { if((copy("uploads/$fname", "$dfpath/$fname")) === false) $xAC063X21['stat'] = 'copyerr'; }  echo json_encode($xAC063X21); break;  case 'k1dE1fXCF': require_once($iccheckLoc); $xAC063X21 = array('status'=>'ng', 'msgln'=>'2'); $dotdot = $xA91113X0['dotdot']; $max = '('.ini_get('upload_max_filesize').')';  if(! file_exists('uploads/'.$xA91113X0['fname']) ) { $max = '['.ini_get('upload_max_filesize').']'; $xAC063X21['msg'] = 'Unable to load Project file.<br>'; $xAC063X21['msg'] .= 'PHP config <b><tt>upload_max_filesize</tt></b> set too low? '.$max.'.'; echo json_encode($xAC063X21); break; } preg_match('/^(.*?)\./', $xA91113X0['fname'], $m); $tarname = $m[1].'.tar'; try { $tar = new PharData('uploads/'.$xA91113X0['fname']); $tar->decompress(); unset($tar);  Phar::unlinkArchive('uploads/'.$xA91113X0['fname']);  $tar1 = new PharData("uploads/$tarname"); $tar1->extractTo('./uploads', null, true); unset($tar1);  Phar::unlinkArchive("uploads/$tarname"); $istr = file_get_contents('uploads/info/jstr'); $xA90103X5 = json_decode($istr, true);  if($xA90103X5['sig'] != 'MassPageCreator Project') { $xAC063X21['msg'] = 'Incorrect file signature for an Mpc Project.'; $xAC063X21['msg'] .= '<br><b><tt>'.$xA91113X0['fname'].'</tt></b>'; echo json_encode($xAC063X21); break; } } catch (Exception $e) { $emsg = $e->getMessage(); trigger_error($emsg, E_USER_ERROR); $xAC063X21['msg'] = 'Incorrect file format for an Mpc Project.'; $xAC063X21['msg'] .= '<br><b><tt>'.$xA91113X0['fname'].'</tt></b>'; echo json_encode($xAC063X21); break; }  rename('uploads/sett/jsettings', 'jsettings');   $psource = $xA91113X0['mem_protected_source']; $ar_ppaths = json_decode($xA91113X0['mem_protected_paths'], true); $ar_pvars = json_decode($xA91113X0['mem_protected_vars'], true);    $xAC063X21['protected'] = ( ($psource == 1) || (in_array(1, $ar_ppaths)) || (in_array(1, $ar_pvars)) )? 1 : 0;  if($xAC063X21['protected'] == 0) file_put_contents('snap/cp_Name', $xA91113X0['fname']);  if($psource == 0) rename('uploads/snap/cp_taSource', 'snap/cp_taSource'); else touch('snap/cp_taSource'.$x);  for($x=1;$x<6;$x++) { if($ar_ppaths['pid'.$x] == 0) { rename('uploads/snap/cp_taPath'.$x, 'snap/cp_taPath'.$x); rename('uploads/snap/cp_txPath'.$x, 'snap/cp_txPath'.$x); } else { touch('snap/cp_taPath'.$x); touch('snap/cp_txPath'.$x); } }  for($x=1;$x<10;$x++) { if($ar_pvars['vid'.$x] == 0) { rename('uploads/snap/cp_taVar'.$x, 'snap/cp_taVar'.$x); rename('uploads/snap/cp_txVar'.$x, 'snap/cp_txVar'.$x); } else { touch('snap/cp_taVar'.$x); touch('snap/cp_txVar'.$x); } }  $xAC063X21['SBOX'] = file_get_contents('snap/cp_taSource'); for($x=1;$x<6;$x++) { $xAC063X21['PBOX'.$x] = file_get_contents('snap/cp_taPath'.$x); $xAC063X21['PLAB'.$x] = file_get_contents('snap/cp_txPath'.$x); } for($x=1;$x<10;$x++) { $xAC063X21['VBOX'.$x] = file_get_contents('snap/cp_taVar'.$x); $xAC063X21['VLAB'.$x] = file_get_contents('snap/cp_txVar'.$x); }  $xdB78cXdE = 0; $ar = array(); if($psource == 0) { foreach($xA90103X5['asrc'] as $fi) { if(! file_exists("uploads/fsrc/$fi")) continue;  if(! file_exists("../$fi")) { renamePath("uploads/fsrc/$fi", "../$fi"); continue; }  if( md5_file("uploads/fsrc/$fi") == md5_file("../$fi") ) continue;  $xdB78cXdE++; $ar[] = $fi; } } $xAC063X21['isrc'] = $xdB78cXdE; $xAC063X21['asrc'] = $ar;   $xdB78cXdE = 0; $ar = array(); foreach($xA90103X5['aweb'] as $fi) { if(! file_exists("uploads/fweb/$fi")) continue; $xdB78cXdE++; $ar[] = $fi; } $xAC063X21['iweb'] = $xdB78cXdE; $xAC063X21['aweb'] = $ar;   $xAC063X21['status'] = 'ok_adv'; echo json_encode($xAC063X21); break;       case 'kE8b20XAc': require_once($iccheckLoc); $x0XC64XFb = json_decode($xA91113X0['strs'], true); $arw = json_decode($xA91113X0['strw'], true); $dots = '../'.$xA91113X0['dotdot']; $prelen = strlen('uploads/fweb/');  foreach($x0XC64XFb as $fi) { renamePath("uploads/fsrc/$fi", "../$fi"); }  foreach($arw as $web) { if($web[strlen($web)-1] != '/') { renamePath("uploads/fweb/$web", "$dots$web"); } else { $webt = trim($web, '/'); listTreeJ('uploads/fweb/'.$webt); foreach($theArray as $uweb) { renamePath($uweb, $dots.substr($uweb, $prelen) ); } } } echo 'ok'; break;  case 'k0dE1fXCF': require_once($iccheckLoc); if(file_exists('pjfiles')) delTreeJ('pjfiles'); $xAC063X21 = array('status'=>'ng', 'msgln'=>'2');  if(! file_exists('uploads/' . $xA91113X0['fname'])) { $max = '['.ini_get('upload_max_filesize').']'; $xAC063X21['msg'] = 'Unable to load Project file.<br>'; $xAC063X21['msg'] .= 'PHP config <b><tt>upload_max_filesize</tt></b> set too low? '.$max.'.'; echo json_encode($xAC063X21); break; } $hd = trim(file_get_contents('uploads/' . $xA91113X0['fname']));  $pj = json_decode($hd, true); if(empty($pj)) { $xAC063X21['msg'] = 'Incorrect file format for an Mpc Project.'; $xAC063X21['msg'] .= '<br><b><tt>'.$xA91113X0['fname'].'</tt></b>'; echo json_encode($xAC063X21); break; }  if($pj['SIG'] != 'MassPageCreator Project') { $xAC063X21['msg'] = 'File is not an Mpc Project.'; $xAC063X21['msg'] .= '<br><b><tt>'.$xA91113X0['fname'].'</tt></b>'; echo json_encode($xAC063X21); break; }  $psource = $xA91113X0['mem_protected_source'];  $iVER = (int)$pj['VER']; if(empty($pj['FCOUNT'])) $pj['FCOUNT'] = 0;  if($psource != 0) $pj['FCOUNT'] = 0;  $names = ""; if($pj['FCOUNT'] != 0) { mkdir('pjfiles', 0777); $xdB78cXdE = 0; for($x=1;$x<=$pj['FCOUNT'];$x++) { $n = $pj["FNAME$x"]; $d = $pj["FDATA$x"]; if($d == "") continue;  if($iVER > 313) $d = base64_decode(str_replace("\r\n", "", $pj["FDATA$x"]));  if(!file_exists("../$n")) { if(strpos($n,"/") !== false) { $dp = pathinfo($n,PATHINFO_DIRNAME); if(!is_dir('../'.$dp)) mkdir('../'.$dp,0777,true); } file_put_contents("../$n", $d); $pj["FDATA$x"] = ""; continue; }  if(is_file("../$n")) { if(  md5_file("../$n") == md5($d) ) { $pj["FDATA$x"] = ""; continue; } }  $xdB78cXdE++; $names .= $n.','; file_put_contents("pjfiles/F$xdB78cXdE", $d); $pj["FDATA$x"] = ""; } $pj['FCOUNT'] = $xdB78cXdE; $pj['FNAMES'] = trim($names, ','); } if(isset($pj['JSET'])) { $pjdisk = array(); if(file_exists('jsettings')) $pjdisk = json_decode( file_get_contents('jsettings'), true);  $pjnew = json_decode($pj['JSET'],true); foreach($pjnew as $k => $v) { $pjdisk[$k] = $v; } file_put_contents('jsettings', json_encode($pjdisk)); }   $ar_ppaths = json_decode($xA91113X0['mem_protected_paths'], true); $ar_pvars = json_decode($xA91113X0['mem_protected_vars'], true);    $xAC063X21['protected'] = ( ($psource == 1) || (in_array(1, $ar_ppaths)) || (in_array(1, $ar_pvars)) )? 1 : 0;  if($xAC063X21['protected'] == 0) file_put_contents('snap/cp_Name', $xA91113X0['fname']);  if($psource == 0) { file_put_contents('snap/cp_taSource', $pj['SBOX']); } else { touch('snap/cp_taSource'); $pj['SBOX'] = file_get_contents('snap/cp_taSource'); }  for($x=1;$x<6;$x++) { if($ar_ppaths['pid'.$x] == 0) { file_put_contents('snap/cp_taPath'.$x, $pj['PBOX'.$x]); file_put_contents('snap/cp_txPath'.$x, $pj['PLAB'.$x]); } else { touch('snap/cp_taPath'.$x); touch('snap/cp_txPath'.$x); $pj['PBOX'.$x] = file_get_contents('snap/cp_taPath'.$x); $pj['PLAB'.$x] = file_get_contents('snap/cp_txPath'.$x); } }  for($x=1;$x<10;$x++) { if($ar_pvars['vid'.$x] == 0) { file_put_contents('snap/cp_taVar'.$x, $pj['VBOX'.$x]); file_put_contents('snap/cp_txVar'.$x, $pj['VLAB'.$x]); } else { touch('snap/cp_taVar'.$x); touch('snap/cp_txVar'.$x); $pj['VBOX'.$x] = file_get_contents('snap/cp_taVar'.$x); $pj['VLAB'.$x] = file_get_contents('snap/cp_txVar'.$x); } }  $pj['status'] = 'ok_leg'; echo json_encode($pj); break;  case 'k21F21X2d': $mix = md5(date('r', time())).'a'; $alt = md5(date('r', time())).'b'; $beg_mix = "--$mix\r\n"; $end_mix = "--$mix--\r\n"; $beg_alt = "--$alt\r\n"; $end_alt = "--$alt--\r\n"; require_once($iccheckLoc);  $xDX7175X2 = $xA91113X0['scode']; $ver = $xA91113X0['ver']; $dotdot = $xA91113X0['dotdot']; $ssl = $xA91113X0['ssl']; $x565165Xx = $xA91113X0['email']; $theDomainP = $xA91113X0['theDomainP']; $theFnameUrl = $xA91113X0['theFnameUrl'];  $to = 'orbigraph@gmail.com'; $x1Df190Xd = 'MPC_'.$xDX7175X2; $xx9DeaX19 = "From:  Mpc Diagnostics no-reply@masspagecreator.com\r\n"; $xx9DeaX19 .= "Content-Type: multipart/mixed; boundary=$mix\r\n\r\n";  ob_start(); phpinfo(); $xA90103X5 = ob_get_clean();  $xXBA9eXA7 = "no mpcerr_log available\n"; if(file_exists('mpcerr_log')) { $xXBA9eXA7 = file_get_contents('mpcerr_log'); unlink('mpcerr_log'); } $sweb = (strlen($xDX7175X2) == 5)? 1 : 0;  $bPhar = ( class_exists('PharData', false) )? true : false; if($bPhar) { xEA01b2XX($xA91113X0['ver'], $xA91113X0['dotdot'], $sweb, $status, $msg); unset($tarObject); if(file_exists('mpc_project.tar')) Phar::unlinkArchive('mpc_project.tar'); } else xEA01b1XX($xA91113X0['ver']);  $emsg = ''; $emsg .= $beg_mix; $emsg .= "Content-Type: multipart/alternative; boundary=$alt\r\n\r\n";  $emsg .= $beg_alt; $emsg .= "Content-Type: text/plain; charset=UTF-8\r\n\r\n"; $emsg .= "Hello World!!!\r\n\r\n";  $emsg .= $beg_alt; $emsg .= "Content-Type: text/plain; charset=UTF-8\r\n\r\n"; $emsg .= "---------------------------------------------\r\n"; $emsg .= "Reg User: $x565165Xx\r\n"; $emsg .= "Mpc Url: $ssl$theFnameUrl\r\n"; $emsg .= "---------------------------------------------\r\n\r\n"; $emsg .= $end_alt;  $emsg .= $beg_mix; $emsg .= "Content-Type: text/html; charset=UTF-8; name={$theDomainP}_phpinfo.html\r\n"; $emsg .= "Content-Disposition: attachment; filename={$theDomainP}_phpinfo.html\r\n\r\n"; $emsg .= "$xA90103X5\r\n";  $emsg .= $beg_mix; $emsg .= "Content-Type: text/plain; charset=UTF-8; name={$theDomainP}_mpcerr.txt\r\n"; $emsg .= "Content-Disposition: attachment; filename={$theDomainP}_mpcerr.txt\r\n\r\n"; $emsg .= "$xXBA9eXA7\r\n";  if($bPhar) { $emsg .= $beg_mix; $emsg .= "Content-Type: application/x-gzip; name={$theDomainP}_project.tgz\r\n"; $emsg .= "Content-Disposition: attachment; filename={$theDomainP}_project.tgz\r\n"; $emsg .= "Content-Transfer-Encoding: base64\r\n\r\n"; $emsg .= @base64_encode(file_get_contents('mpc_project.tgz')); $emsg .= "\r\n"; $emsg .= $end_mix; } else { $emsg .= $beg_mix; $emsg .= "Content-Type: text/plain; charset=UTF-8; name={$theDomainP}_project.prj\r\n"; $emsg .= "Content-Disposition: attachment; filename={$theDomainP}_project.prj\r\n\r\n"; $emsg .= file_get_contents('mpc_project.prj'); $emsg .= "\r\n"; $emsg .= $end_mix; }  mail($to, $x1Df190Xd, $emsg, $xx9DeaX19); break;  case 'jE8b20XAc': require_once($iccheckLoc); newProjectName($xA91113X0['fname'].'.tgz'); if(! xEA01b2XX($xA91113X0['ver'], $xA91113X0['dotdot'], $xA91113X0['iWebRoot'], $status, $msg) ) $status = 'cancel'; $xAC063X21 = array('status'=>$status, 'msg'=>$msg); unset($tarObject); if(file_exists('mpc_project.tar')) Phar::unlinkArchive('mpc_project.tar'); echo json_encode($xAC063X21); break;  case 'jE7b20XAc': require_once($iccheckLoc); newProjectName($xA91113X0['fname'].'.prj'); $xAC063X21 = array('status'=>'ok_leg'); if(! xEA01b1XX($xA91113X0['ver']) ) $xAC063X21['status'] = 'cancel'; echo json_encode($xAC063X21); break;  case 'kE7b20XAc': require_once($iccheckLoc); $xd8d114X9 = $xA91113X0['parm_ajax']; $ar = json_decode($xd8d114X9,true); $xAE0118X8 = $ar['LEN']; $arf = explode(',', $ar['FNUM']); for($x=0;$x<$xAE0118X8;$x++) { $sd = explode(':', $arf[$x]); $x1CxacX8A = $sd[1]; if(strpos($x1CxacX8A,"/") !== false) { $dp = pathinfo($x1CxacX8A,PATHINFO_DIRNAME); if(!file_exists('../'.$dp)) { mkdir('../'.$dp,0777,true); } } copy('pjfiles/'.$sd[0], '../'.$sd[1]); } break;         case 'y27751X15': if(is_dir('tar')) delTreeJ('tar'); if(file_exists('rh.db')) unlink('rh.db'); echo 'ok'; break;  case 'ajax_ftp_test': require_once($iccheckLoc); $xBAfebX39 = $xA91113X0['parm_host']; $user = $xA91113X0['parm_user']; $pass = $xA91113X0['parm_pass']; $port = $xA91113X0['parm_port']; $root = $xA91113X0['parm_root']; $mdir = $xA91113X0['parm_mdir']; $domain = $xA91113X0['parm_domain']; $trimFname = $xA91113X0['trimFname']; $aux = $trimFname.'_aux';  $xAC063X21 = array(); $ftp = ftpOpen($xAC063X21, $xBAfebX39, $user, $pass, $port);  if($xAC063X21['stat'] != 'ok') { echo json_encode($xAC063X21); break; } else { $xAC063X21['msg'] = 'ok_test';  if(! @ftp_chdir($ftp, $root) ) { @ftp_close($ftp); $xAC063X21['msg_curl'] = 'iswww'; echo json_encode($xAC063X21); break; }      if(! @ftp_put($ftp, 'mpctest5_150423_171438.php', 'mpctest5.php', FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg_curl'] = 'wtest'; echo json_encode($xAC063X21); break; } @ftp_close($ftp);  $url = str_replace(' ', '%20', "http://$domain/mpctest5_150423_171438.php");  $xAC063X21['msg_curl'] = 'err'; $xAC063X21['err_curl'] = 254; try { $x0b37eX86 = curl_init(); curl_setopt($x0b37eX86, CURLOPT_URL, $url); curl_setopt($x0b37eX86, CURLOPT_FAILONERROR, 1); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); curl_setopt($x0b37eX86, CURLOPT_TIMEOUT, 20); $xF0F1beXf = curl_exec($x0b37eX86); if($xF0F1beXf[0] == '{') { $xAC063X21['err_curl'] = curl_errno($x0b37eX86); $jc = json_decode($xF0F1beXf, true); } curl_close($x0b37eX86); } catch (Exception $e) { $xAC063X21['err_curl'] = 255; }  if($xAC063X21['err_curl'] == 0) { $xAC063X21['msg_curl'] = 'ok'; $xAC063X21['url'] = $url; $xAC063X21['cap'] = $jc['cap']; $xAC063X21['ver'] = $jc['ver']; $xAC063X21['sql'] = $jc['sql']; $xAC063X21['bin'] = $jc['bin']; } echo json_encode($xAC063X21); break; }  case 'ajax_ftp_tar': require_once($iccheckLoc); $xBAfebX39 = $xA91113X0['parm_host']; $user = $xA91113X0['parm_user']; $pass = $xA91113X0['parm_pass']; $port = $xA91113X0['parm_port']; $root = $xA91113X0['parm_root']; $px   = $xA91113X0['px']; $sv   = $xA91113X0['sv']; $pagetar = $px.'-pages.tar.gz'; $maptar = $px.'-sitemaps.tar.gz'; $xAC063X21 = array(); if($root == '') { $xAC063X21['msg'] = 'nowww'; echo json_encode($xAC063X21); break; }  $ftp = ftpOpen($xAC063X21, $xBAfebX39, $user, $pass, $port); if($xAC063X21['stat'] != 'ok') { echo json_encode($xAC063X21); break; }  if(! @ftp_chdir($ftp, $root) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'iswww'; echo json_encode($xAC063X21); break; }  $ptar_ok = false; $star_ok = false; if( ($sv == 1) || ($sv == 3) ) { if(! file_exists("tar/$pagetar") ) { $xAC063X21['msg'] = 'nopagetar'; echo json_encode($xAC063X21); break; } if(! ftp_put($ftp, $pagetar, "tar/$pagetar", FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'tarwrite1'; echo json_encode($xAC063X21); break; } $ptar_ok = true; }  if( ($sv == 2) || ($sv == 3) ) { if(! file_exists("tar/$maptar") ) { $xAC063X21['msg'] = ($ptar_ok)? 'nomaptar3' :  'nomaptar'; echo json_encode($xAC063X21); break; } if(! ftp_put($ftp, $maptar, "tar/$maptar", FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg'] = ($ptar_ok)? 'tarwrite3' : 'tarwrite2'; echo json_encode($xAC063X21); break; } $star_ok = true; } $i = 0; if($ptar_ok) $i += 1; if($star_ok) $i += 2; $xAC063X21['msg'] = "ok_tar$i"; echo json_encode($xAC063X21); break;  case 'ajax_ftp_send': require_once($iccheckLoc); $xBAfebX39 = $xA91113X0['parm_host']; $user = $xA91113X0['parm_user']; $pass = $xA91113X0['parm_pass']; $port = $xA91113X0['parm_port']; $root = $xA91113X0['parm_root']; $mdir = $xA91113X0['parm_mdir']; $ftx1 = $xA91113X0['ftx1']; $ftx2 = $xA91113X0['ftx2']; $ftx3 = $xA91113X0['ftx3']; $trimFname = $xA91113X0['trimFname']; $theZname = $trimFname.'_pclzip.php';  $xAC063X21 = array(); if($root == '') { $xAC063X21['msg'] = 'nowww'; echo json_encode($xAC063X21); break; } if($mdir == '') { $xAC063X21['msg'] = 'nompc'; echo json_encode($xAC063X21); break; }  $ftp = ftpOpen($xAC063X21, $xBAfebX39, $user, $pass, $port); if($xAC063X21['stat'] != 'ok') { echo json_encode($xAC063X21); break; }  if(! @ftp_chdir($ftp, $root) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'iswww'; echo json_encode($xAC063X21); break; }  if(! @ftp_chdir($ftp, $mdir) ) { if(! @ftp_mkdir($ftp, $mdir)) { @ftp_close($ftp); $xAC063X21['msg'] = 'mk_mdir'; echo json_encode($xAC063X21); break; } if(! @ftp_chdir($ftp, $mdir) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'cd_mdir'; echo json_encode($xAC063X21); break; } }  if(! @ftp_put($ftp, $theZname, "../$theZname", FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'werr'; echo json_encode($xAC063X21); break; }  if($ftx1 == 1) { if(! @ftp_put($ftp, $trimFname.'.php', '../'.$trimFname.'.php', FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'ftx1_prg'; echo json_encode($xAC063X21); break; } }  if($ftx2 == 1) { if(! @ftp_put($ftp, $trimFname.'_ini.php', '../'.$trimFname.'_ini.php', FTP_BINARY) ) { @ftp_close($ftp); $xAC063X21['msg'] = 'ftx2'; echo json_encode($xAC063X21); break; } }  if(! @ftp_chdir($ftp, $trimFname.'_aux') ) { @ftp_mkdir($ftp, $trimFname.'_aux'); if(! @ftp_chdir($ftp, $trimFname.'_aux') ) { @ftp_close($ftp); $xAC063X21['msg'] = 'mk_aux'; echo json_encode($xAC063X21); break; } }   if($ftx1 == 1) { if(! @ftp_put($ftp, 'settings', 'settings', FTP_BINARY) ) {                @ftp_close($ftp); $xAC063X21['msg'] = 'ftx1_set'; echo json_encode($xAC063X21); break; } }  if($ftx3 == 1) { if(! @ftp_put($ftp, 'jsettings', 'jsettings', FTP_BINARY) ) {                @ftp_close($ftp); $xAC063X21['msg'] = 'ftx3_set'; echo json_encode($xAC063X21); break; } }  if($ftx3 == 1) require_once "../$theZname";   if($ftx3 == 1) { $zip = new PclZip('snap.zip'); $zip->create('snap');   $xF0F1beXf = @ftp_put($ftp, 'snap.zip', 'snap.zip', FTP_BINARY); unlink('snap.zip'); if(! $xF0F1beXf) { @ftp_close($ftp); $xAC063X21['msg'] = 'ftx3_box'; echo json_encode($xAC063X21); break; } }  if( ($ftx3 == 1) && file_exists('snap/cp_taSource') ) { $ar = explode('\\n', file_get_contents('snap/cp_taSource')); if(count($ar) > 0) { $ar1 = array(); foreach($ar as $line) { $pos = strpos($line, '>'); if($pos !== false) $line = substr($line, 0, $pos); $pos = strrpos($line, ']'); if($pos !== false) $line = substr($line, $pos+1); $line = trim($line); $ar1[$line] = 1; } $ar2 = array_keys($ar1); $flist = ""; foreach($ar2 as $fn) { if( file_exists("../$fn") ) $flist .= "../$fn,"; } $flist = trim($flist, ',');  if($flist != "") { $zip = new PclZip('src.zip'); $zip->create($flist, PCLZIP_OPT_REMOVE_PATH, "../"); $xF0F1beXf = @ftp_put($ftp, 'src.zip', 'src.zip', FTP_BINARY); unlink('src.zip'); if(! $xF0F1beXf) { @ftp_close($ftp); $xAC063X21['msg'] = 'ftx3_src'; echo json_encode($xAC063X21); break; } } } }  @ftp_close($ftp); $xAC063X21['msg'] = 'ok_send'; echo json_encode($xAC063X21); break;  case 'ajax_fixPaths': require_once($iccheckLoc); $scanType = $xA91113X0['scanType']; $assetFolder = $xA91113X0['assetFolder']; $origUrl = str_replace('^', '.', $xA91113X0['origUrlCaret']); $assetFlen = strlen($assetFolder);  $ar_offset = array(); $f1 = fopen('tmp/tmp.404.txt', 'r'); while( ($line = fgets($f1)) !== false ) { $ar = explode("\t", $line); $ar_offset[] = $ar[2]; } fclose($f1);  $FROM = fopen('tmp/tmp.edstr.txt', 'r'); $TO = fopen('tmp/tmp.edmod.txt', 'w'); $fptr = 0;  foreach($ar_offset as $offset) { while($fptr < $offset) { $char = fread($FROM, 1); $fptr++; fwrite($TO, $char, 1); }  $char1 = fread($FROM, 1); $char2 = fread($FROM, 1); $fptr += 2; switch($scanType) { case 'assf': if( ($char1 == '.') && ($char2 == '/') ) { fwrite($TO, $assetFolder); break; }  if($char1 == '/') { fwrite($TO, $assetFolder.$char2); break; }  fwrite($TO, $assetFolder.$char1.$char2); break;  case 'webf': if( ($char1 == '.') && ($char2 == '/') ) { fwrite($TO, $char2); break; } fwrite($TO, '/'.$char1.$char2); break;  case 'extf': if( ($char1 == '.') && ($char2 == '/') ) { fwrite($TO, $origUrl.$char2); break; }  if($char1 == '/') { fwrite($TO, $origUrl.$char1.$char2); break; }  fwrite($TO, $origUrl.'/'.$char1.$char2); break; } } while(! feof($FROM) ) { fwrite( $TO, fgets($FROM) ); } fclose($FROM); fclose($TO); echo file_get_contents('tmp/tmp.edmod.txt'); break;      } exit(); }   function saveCFentry($domain, $email, $key) { global $iccheckLoc; require_once($iccheckLoc); $xAC063X21 = array(); if( file_exists('cf_arsettings.php') ) { require('cf_arsettings.php'); $xAC063X21 = json_decode($cfjstr, true); }  $xAC063X21[$domain] = $email.','.$key; $xx85188XA = json_encode($xAC063X21); file_put_contents('cf_arsettings.php', "<?php\n\$cfjstr = '".$xx85188XA."';\n?>\n"); chmod('cf_arsettings.php', 0644); }   function loadCFentry($domain, &$ar_ret) { global $iccheckLoc; require_once($iccheckLoc); $ar_ret = array( 'domain' => $domain, 'email' => '', 'key' => '' ); if(! file_exists('cf_arsettings.php') ) return;  require('cf_arsettings.php'); $ar_cfjstr = json_decode($cfjstr, true); if(array_key_exists($domain, $ar_cfjstr)) { $ek_str = $ar_cfjstr[$domain]; $ar_ek = explode(',', $ek_str); $ar_ret['email'] = $ar_ek[0]; $ar_ret['key'] = $ar_ek[1]; } }   function utf16_to_utf8($xx85188XA) { $c0 = ord($xx85188XA[0]); $c1 = ord($xx85188XA[1]);  if ($c0 == 0xFE && $c1 == 0xFF) { $be = true; } else if ($c0 == 0xFF && $c1 == 0xFE) { $be = false; } else { return $xx85188XA; }  $xx85188XA = substr($xx85188XA, 2); $xAE0118X8 = strlen($xx85188XA); $dec = ''; for ($i = 0; $i < $xAE0118X8; $i += 2) { $c = ($be) ? ord($xx85188XA[$i]) << 8 | ord($xx85188XA[$i + 1]) :  ord($xx85188XA[$i + 1]) << 8 | ord($xx85188XA[$i]); if ($c >= 0x0001 && $c <= 0x007F) { $dec .= chr($c); } else if ($c > 0x07FF) { $dec .= chr(0xE0 | (($c >> 12) & 0x0F)); $dec .= chr(0x80 | (($c >>  6) & 0x3F)); $dec .= chr(0x80 | (($c >>  0) & 0x3F)); } else { $dec .= chr(0xC0 | (($c >>  6) & 0x1F)); $dec .= chr(0x80 | (($c >>  0) & 0x3F)); } } return $dec; }   function str_iunique(&$xx85188XA) { $xAC063X21 = explode('\\n', $xx85188XA); $tmp = array(); $callback = function ($a) use (&$tmp, &$uniq) { if (in_array(strtolower($a), $tmp)) { return false; } $uniq[] = $a; $tmp[] = strtolower($a); return true; }; array_filter($xAC063X21, $callback); $xx85188XA = implode('\\n', $uniq); }   function validateTK($tk) { $u = 'http://ip.bseolized.com/check_ip/192.168.0.1?token='.$tk; $xF0F1beXf = curl_get_contents($u); if(empty($xF0F1beXf)) return false; if($xF0F1beXf[0] != '{') return false; try { $j = json_decode($xF0F1beXf, true); } catch (Exception $e) { return false; } if( $j['is_spider'] != 0) return false; return true; }   function getTimestampJ($offset) { $x2CGaeX00 = new DateTime( 'now', new DateTimeZone('GMT') ); if( strtolower($offset) != 'gmt') { $t = (int)substr($offset, 1, 1); if( substr($offset, 0, 1) == '+') { $x2CGaeX00->add( new DateInterval('PT'.$t.'H') ); } else { $x2CGaeX00->sub( new DateInterval('PT'.$t.'H') ); } } return $x2CGaeX00->format('\-Ymd-H\hi'); }   function copy_directory( $src, $x1CxacX8A ) {   $dir = opendir( $src );  @mkdir($x1CxacX8A, 0777, true);  while( false !== ( $file = readdir( $dir ) ) ) {  if( $file == '.' || $file == '..' ) continue; if( is_dir( $src . '/' . $file ) ) {  copy_directory( $src . '/' . $file, $x1CxacX8A . '/' . $file );  } else {  copy( $src . '/' . $file, $x1CxacX8A . '/' . $file );  }  }  closedir( $dir );  }   function newProjectName($x0G3155XX) { file_put_contents('snap/cp_Name', $x0G3155XX);   }       function sortSourceBox($xx85188XA, $dosort) { $x0XC64XFb  = array(); $ar_d = array(); $ar_g = array(); $ar_i = array(); $ar_a = array(); $ar_w = array(); $ar = explode('\\n', $xx85188XA); $ar_rg = array(); foreach($ar as $e) { if($e == '') continue; if($e[0] != '[') { $x0XC64XFb[] = $e; continue; } switch($e[1]) { case 'd': $ar_d[] = $e; break; case 'g': $ar_g[] = $e; if( preg_match('/\[(.+?)\]/', $e, $m) == 1) { $ar_rg[$m[1]][] = $e; } break; case 'i': $ar_i[] = $e; break; case 'a': $ar_a[] = $e; break; case 'w': $ar_w[] = $e; break; } }  if( count($ar_rg) > 0 ) { if( ($dosort == 1) || ($dosort == 'alpha') ) { sort($ar_g); } if( $dosort == 'random') { $ark = array_keys($ar_rg); $ar_g = array(); foreach($ark as $k) { $atmp = $ar_rg[$k]; shuffle($atmp); $ar_g = array_merge($ar_g, $atmp); } } }  sort($x0XC64XFb); sort($ar_i); sort($ar_a); sort($ar_w);  $ar_w = array_unique($ar_w); $x0XC64XFb = array_merge($x0XC64XFb, $ar_d, $ar_g, $ar_i, $ar_a, $ar_w); file_put_contents( 'snap/cp_taSource', implode('\\n', $x0XC64XFb) ); return implode("\n", $x0XC64XFb); }   function xEA01b2XX($ver, $dotdot, $saveWeb, &$status, &$msg) { global $tarObject, $sv_files_done, $sv_pc_cur, $sv_pc_new, $sv_pc_mul;  $status = 'ok_adv'; $msg = ''; parseSourceFiles($ar_src, $ar_web, $saveWeb);  $sv_total = 32; $sv_total += count($ar_src); $sv_total += count($ar_web); $sv_pc_mul = 100/$sv_total; $sv_files_done = 0; $sv_pc_cur = 0; $sv_pc_new = 0;  if(file_exists('mpc_project.tar')) unlink('mpc_project.tar'); if(file_exists('mpc_project.tgz')) unlink('mpc_project.tgz');  try { $tarObject = new PharData('mpc_project.tar');  $isrc = 0; foreach($ar_src as $src) { if(x40b10aX3()) return false; if(file_exists("../$src")) { addTarFile("../$src", "fsrc/$src");  $isrc++; } }  $iweb = 0; $dots = $dotdot.'../'; $dotlen = strlen($dots); foreach($ar_web as $web) { if(x40b10aX3()) return false;  if($web[strlen($web)-1] != '/') { if(! is_file("$dots$web")) continue; addTarFile("$dots$web", "fweb/$web"); $iweb++; } else { $webt = trim($web, '/'); if(! is_dir("$dots$webt") ) continue; addTarDir($webt, 'fweb/', $dots, $dotlen); if(x40b10aX3()) return false; $iweb++; } }  $ar_info = array('sig'=>'MassPageCreator Project', 'ver'=>$ver, 'isrc'=>$isrc, 'iweb'=>$iweb, 'asrc'=>$ar_src, 'aweb'=>$ar_web); $tarObject->addFromString('info/jstr', json_encode($ar_info));  addTarFile('jsettings', 'sett/jsettings');   if(x40b10aX3()) return false;  touch('snap/cp_taSource'); addTarFile('snap/cp_taSource', 'snap/cp_taSource'); for($x=1; $x<6; $x++) { touch("snap/cp_taPath$x"); touch("snap/cp_txPath$x"); addTarFile("snap/cp_taPath$x", "snap/cp_taPath$x"); addTarFile("snap/cp_txPath$x", "snap/cp_txPath$x"); } if(x40b10aX3()) return false;  for($x=1; $x<10; $x++) { touch("snap/cp_taVar$x"); touch("snap/cp_txVar$x"); addTarFile("snap/cp_taVar$x", "snap/cp_taVar$x"); addTarFile("snap/cp_txVar$x", "snap/cp_txVar$x"); } if(x40b10aX3()) return false;  $tarObject->compress(Phar::GZ, 'tgz'); } catch (Exception $e) { $status = 'ex'; $msg = trim($e->getMessage()); return true; }  if(! file_exists('mpc_project.tar')) { $status = 'ng'; $msg = 'Could not create tar file'; return true; } if(! file_exists('mpc_project.tgz')) { $status = 'ng'; $msg = 'Could not compress tar file'; return true; } return true; }  function xEA01b1XX($ver) { if(file_exists('mpc_project.prj')) unlink('mpc_project.prj'); $arProject = array('SIG'=>'MassPageCreator Project'); $arProject['VER'] = $ver; $arProject['FTF'] = 1; $arProject['JSET'] = file_get_contents('jsettings');   parseSourceFiles($ar_src, $ar_web, 0);  if(x40b10aX3()) return false;  $arProject['FCOUNT'] = count($ar_src);  $arProject['SBOX'] = if_file_get_contents('snap/cp_taSource');  for($x=1;$x<6;$x++) {        if(x40b10aX3()) return false; $arProject['PLAB'.$x] = if_file_get_contents("snap/cp_txPath$x"); $arProject['PBOX'.$x] = if_file_get_contents("snap/cp_taPath$x"); } for($x=1;$x<10;$x++) { if(x40b10aX3()) return false; $arProject['VLAB'.$x] = if_file_get_contents("snap/cp_txVar$x"); $arProject['VBOX'.$x] = if_file_get_contents("snap/cp_taVar$x"); }  $c = 0; foreach($ar_src as $fn) { if(x40b10aX3()) return false; $c++; $arProject['FNAME'.$c] = $fn; $arProject['FDATA'.$c] = ''; if(! file_exists('../'.$fn)) continue; $xF0F1beXf = file_get_contents('../'.$fn); if($xF0F1beXf === false) continue; $arProject['FDATA'.$c] = base64_encode($xF0F1beXf); }  if(x40b10aX3()) return false; file_put_contents('mpc_project.prj', json_encode($arProject)); return true; }   function renamePath($src, $dest) { if(strpos($src, '/') !== false) { $sdir = dirname($src); $ddir = dirname($dest); if(! is_dir($ddir) ) mkdir($ddir, 0755, true); } rename($src, $dest); if(is_dir($dest)) chmod($dest, 0755); else if(is_file($dest)) chmod($dest, 0644); }   function x40b10aX3() { if(file_exists('cancel')) { unlink('cancel'); return true; } return false; }   function addTarFile($sname, $dname) { global $tarObject, $sv_files_done, $sv_pc_cur, $sv_pc_new, $sv_pc_mul;   $tarObject->addFile($sname, $dname); $sv_files_done++;  $sv_pc_new = floor($sv_files_done * $sv_pc_mul); if($sv_pc_new != $sv_pc_cur) { $sv_pc_cur = $sv_pc_new; WritePcentFileAJ($sv_pc_cur); } }   function addTarDir($sdir, $ddir, $dots, $dotlen) { global $tarObject, $theArray, $sv_files_done, $sv_pc_cur, $sv_pc_new, $sv_pc_mul;  listTreej("$dots$sdir"); $zz = 20; foreach($theArray as $fdir) { $tarObject->addFile($fdir, $ddir.substr($fdir, $dotlen) ); $zz--; if($zz > 0) continue; if(x40b10aX3()) return false; $zz = 20; } $sv_files_done++; $sv_pc_new = floor($sv_files_done * $sv_pc_mul); if($sv_pc_new != $sv_pc_cur) { $sv_pc_cur = $sv_pc_new; WritePcentFileAJ($sv_pc_cur); } }   function WritePcentFileAJ($pc) { file_put_contents('./pcent',$pc); }   function parseSourceFiles(&$ar_src, &$ar_web, $saveWeb = 0) { $ar_src = array(); $ar_web = array(); if(file_exists('snap/cp_taSource')) { $cps = file_get_contents('snap/cp_taSource'); if($cps != '') { $x0XC64XFb = explode('\n', $cps); foreach($x0XC64XFb as $s) { if(preg_match('/^\[\s*webroot\s*\](.*)/i', $s, $m) == 1) { if($saveWeb != 0) $ar_web[] = trim($m[1]); continue; }  if(preg_match('/^\[\s*asset\s*\](.*)/i', $s, $m) == 1) { $ar_src[] = trim($m[1]); continue; }  if(preg_match('/^\[\s*group.*?\](.*?)>/i', $s, $m) == 1) { if( strpos($m[1], '/.as./') !== false ) continue; $ar_src[] = trim($m[1]); continue; }  if(preg_match('/^\[\s*group.*?\](.*)/i', $s, $m) == 1) { $ar_src[] = trim($m[1]); continue; }  if(preg_match('/^\[\s*(index|file)\s*=\s*\w+\]\s*(.*?)>.*/i', $s, $m) == 1) { $ar_src[] = trim($m[2]); continue; }  if(substr($s, 0, 9) == '[default]') $s = substr($s, 9);  if(preg_match('/^\s*(.*?)\s*>.*/', $s, $m) == 1) { $ar_src[] = trim($m[1]); continue; }  if(preg_match('/^\[\s*(index|file)\s*=\s*\w+\](.*)$/i', $s, $m) == 1) { $xe4c186X4 = trim($m[2]); if($xe4c186X4 != "") $ar_src[] = $xe4c186X4; continue; }  $xe4c186X4 = trim($s); if($xe4c186X4 != "") $ar_src[] = $xe4c186X4; }  $ar_src = array_unique($ar_src); $ar_web = array_unique($ar_web); } } }   function getContainer($zip) { $list = $zip->delete(PCLZIP_OPT_BY_PREG, '/^__MACOSX/'); if($list == 0) throw new Exception($zip->errorInfo(true) ); $xAE0118X8 = count($list); $cfname = ""; $posx = 0; while(1) { if(! _getContainer($list, $xAE0118X8, $cfname) ) break; $cfname .= '/'; } return trim($cfname, '/'); }  function _getContainer(&$list, $xAE0118X8, &$cfname) { global $ar_zipInclude, $ar_zipExclude;  $pos1 = strlen($cfname);      $csub = ""; $ccmp = ""; for($x=0;$x<$xAE0118X8;$x++) { $xefXb5X80 = $list[$x]['filename']; if($xefXb5X80 == $cfname) { if(! in_array($list[$x]['index'], $ar_zipExclude) ) $ar_zipExclude[] = $list[$x]['index']; continue; } if(! in_array($list[$x]['index'], $ar_zipInclude)) $ar_zipInclude[] = $list[$x]['index']; $pos2 = strpos($xefXb5X80, '/', $pos1); if($pos2 === false) return false; { $csub = substr($xefXb5X80, 0, $pos2); if($ccmp == "") $ccmp = $csub;    if($csub != $ccmp) return false;  } } $cfname = $csub; return true; }  class Spintax { public function process($text) { return preg_replace_callback( '/\{(((?>[^\{\}]+)|(?R))*)\}/x', array($this, 'replace'), $text ); }  public function replace($text) { $text = $this->process($text[1]); $parts = explode('|', $text); return $parts[array_rand($parts)]; } }   function curl_get_contents($from) { $url = str_replace(' ','%20',$from); $x0b37eX86 = curl_init($url); curl_setopt($x0b37eX86, CURLOPT_HEADER, 0); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $xF0F1beXf = curl_exec($x0b37eX86); curl_close($x0b37eX86); if($xF0F1beXf) return $xF0F1beXf; return false; }   function setRobot($dots, $xn, $dom) { $url = "$dom/$xn"; if(is_file($dots.'robots.txt')) { $patt = "#Sitemap:\s*$url\s#i"; $xx85188XA = file_get_contents($dots.'robots.txt'); if(preg_match($patt, $xx85188XA) != 1) { file_put_contents($dots.'robots.txt', "Sitemap: $url\n".$xx85188XA); } } else { file_put_contents($dots.'robots.txt', "Sitemap: $url\n"); } }   function getUnique($p, $xn) { if(! file_exists($p.$xn) ) return $xn;  preg_match('/(.+?)(-)?(\d+)?\.xml/i', $xn, $m); $rn = $m[1]; $rn .= '-';  $x = (empty($m[3]))? 0 : $m[3]; while(1) { $x++; $uq = $rn.$x.'.xml'; if(! file_exists($p.$uq) ) break; } return $uq; }   function writeFileXml($path, $fname, $xdB78cXdE) { $fp = fopen($path.$fname, 'w'); fwrite($fp, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n"); fwrite($fp, file_get_contents('tmp/xml.txt'.$xdB78cXdE) ); fwrite($fp, "</urlset>\n"); fclose($fp); }   function ftpOpen(&$xAC063X21, $xBAfebX39, $user, $pass, $port) { $timeout = 20; $xAC063X21['stat'] = 'ng';  $ftp = @ftp_connect($xBAfebX39, $port, $timeout); if(! $ftp) { $xAC063X21['msg'] = 'connect'; return; } $xF0F1beXf = @ftp_login($ftp, $user, $pass); if(! $xF0F1beXf) { @ftp_close($ftp); $xAC063X21['msg'] = 'login'; return; }  @ftp_pasv($ftp, true); $xAC063X21['stat'] = 'ok'; return $ftp; }   function delTreeJ($dir) { $success = false;  if(getUnameJ() != 'Windows') { $descriptorspec = array( 0 => array("pipe", "r"), 1 => array("pipe", "w"), 2 => array("pipe", "w") ); $pipes = array();  $process = proc_open("rm -r $dir", $descriptorspec, $pipes); if(is_resource($process)) { proc_close($process); $success = true; } }  if(! $success) _delTreeJ($dir); }  function _delTreeJ($dir) { foreach(scandir($dir) as $file) { if ('.' === $file || '..' === $file) continue; if (is_dir("$dir/$file")) _delTreeJ("$dir/$file"); else unlink("$dir/$file"); } rmdir($dir); }   function listTreeJ($dir) { global $theArray; $theArray = array(); _listTreeJ($dir); } function _listTreeJ($dir) { global $theArray;  foreach(scandir($dir) as $file) { if ('.' === $file || '..' === $file) continue; if (is_dir("$dir/$file")) _listTreeJ("$dir/$file"); else $theArray[] = "$dir/$file"; } }   function if_file_get_contents($fn) { if(!file_exists($fn)) return ""; return file_get_contents($fn); }   function getUnameJ() { $_SESSION['yAx4fXcX0'] = php_uname('r'); $xaDx1aaX6 = php_uname('s').' '.php_uname('m'); $xdcX11eXa = strtolower(trim($xaDx1aaX6)); if(substr($xdcX11eXa,0,3) == 'win') $xaDx1aaX6 = 'Windows'; return $xaDx1aaX6; }   function postApi($url, $xF8598X1F) { $vhide = false; $data_raw = ""; foreach ($xF8598X1F as $key => $value) { if($key == 'text') { $vhide = true; $s = array(  '#',   '+',   '-',   ':'); $r = array('qq1', 'qq2', 'qq3', 'qq4' ); $value = str_replace($s, $r, $value); } $data_raw = $data_raw . $key . "=" . urlencode($value) . "&"; } $x0b37eX86 = curl_init(); curl_setopt($x0b37eX86, CURLOPT_URL, $url); curl_setopt($x0b37eX86, CURLOPT_POST, true); curl_setopt($x0b37eX86, CURLOPT_POSTFIELDS, $data_raw); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $response = trim(curl_exec($x0b37eX86)); curl_close($x0b37eX86); if($vhide) { $s = array('qq1', 'qq2', 'qq3', 'qq4' ); $r = array(  '#',   '+',   '-',   ':'); $response = str_replace($s, $r, $response); } return $response; }   function refreshReportDy($locs, &$xAC063X21) { $arloc = explode(',', $locs); $xAC063X21 = array('stat'=>'ok'); $db = new SQLite3('../mpc_short_files/dyna.db'); $xx85188XA = '<table>'; foreach($arloc as $loc) { $ar = explode('/', $loc); $tbl = $ar[0]; $arvar = array(); $sel_clause = ''; for($x=1;$x<count($ar);$x++) { $arvar[] = $ar[$x]; $sel_clause .= $ar[$x] . ','; } $sel_clause .= 'id, shortcode_data'; $xaFD162Xd = "SELECT $sel_clause FROM $tbl;"; $xXcb167X9 = @$db->query($xaFD162Xd); if(! $xXcb167X9) { $xAC063X21['stat'] = 'ng'; $xAC063X21['errmsg'] = 'Invalid storage file'; echo json_encode($xAC063X21); break; }   $xx85188XA .= '<tr><td colspan="3"><div class="loc_hdr">'.$tbl.'</div></td></tr>';  while($row = $xXcb167X9->fetchArray(SQLITE3_ASSOC)) { $id = $row['id']; $arp = array(); $arp['ident'] = $loc; $bg = ($row['shortcode_data'] == '')? 'bg_gray' : 'bg_green';  if($id == 1) { $arp['default'] = 1; $varj = rawurlencode(json_encode($arp)); $xx85188XA .= '<tr>'; $xx85188XA .=     '<td><input style="visibility:hidden" type="checkbox"></td>'; $xx85188XA .=     '<td colspan="2" style="width:73px">'; $xx85188XA .=         '<div onclick="MpcCpanel.selectEntry(\''.$varj.'\')"'; $xx85188XA .=             'class="'.$bg.'" style="margin-top:4px">[default]</div>'; $xx85188XA .=     '</td>'; $xx85188XA .= '</tr>'; } else { foreach($arvar as $vn) { $arp[$vn] = $row[$vn]; } $arp['default'] = 0; $varj = rawurlencode(json_encode($arp)); $mrg = 'margin2'; foreach($arvar as $vn) { $cls = ($row[$vn] == '')? 'bg_pink' : $bg;  if($mrg == 'margin2') { $xx85188XA .= '<tr>'; $xx85188XA .=     '<td colspan="3">'; $xx85188XA .=         '<div class="divider"></div>'; $xx85188XA .=     '</td>'; $xx85188XA .= '</tr>'; }  $xx85188XA .= '<tr>'; $xx85188XA .=     '<td>'; if($mrg == 'margin2') { $xx85188XA .=     '<input id="'.$tbl.'-'.$id.'" type="checkbox">'; } $xx85188XA .=     '</td>'; $xx85188XA .=     '<td>'; $xx85188XA .=         '<div onclick="MpcCpanel.selectEntry(\''.$varj.'\')"'; $xx85188XA .=             'class="'.$cls.' '.$mrg.'" style="margin-top:1px">'.$vn.'</div>'; $xx85188XA .=     '</td>'; $xx85188XA .=     '<td style="white-space:nowrap">'; $xx85188XA .=         $row[$vn].'&nbsp;&nbsp;'; $xx85188XA .=     '</td>'; $xx85188XA .= '</tr>';  $mrg = 'margin0'; } } } } $xx85188XA .= '</table><br />'; @$db->close(); $xAC063X21['report'] = $xx85188XA; }   function cflare_get_zone_id(&$xAC063X21) { $url = 'https://api.cloudflare.com/client/v4/zones?name='.$xAC063X21['domain']; $x0b37eX86 = curl_init(); curl_setopt($x0b37eX86, CURLOPT_URL, $url); curl_setopt($x0b37eX86, CURLOPT_HTTPHEADER, array( 'X-Auth-Email:'.$xAC063X21['email'], 'X-Auth-Key:'.$xAC063X21['key'], 'Content-Type:application/json' ) ); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $response = trim(curl_exec($x0b37eX86)); curl_close($x0b37eX86); $cax = json_decode($response, true); if( (!$cax['success']) || (empty($cax['result'])) ) { $xAC063X21['zone'] = ''; $xAC063X21['status'] = 'err_get_zone'; return false; } $xAC063X21['zone'] = $cax['result'][0]['id']; return true; }   function cflare_get_devmode(&$xAC063X21) { $url = 'https://api.cloudflare.com/client/v4/zones/'.$xAC063X21['zone'].'/settings/development_mode'; $x0b37eX86 = curl_init(); curl_setopt($x0b37eX86, CURLOPT_URL, $url); curl_setopt($x0b37eX86, CURLOPT_HTTPHEADER, array( 'X-Auth-Email:'.$xAC063X21['email'], 'X-Auth-Key:'.$xAC063X21['key'], 'Content-Type:application/json' ) ); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $response = trim(curl_exec($x0b37eX86)); curl_close($x0b37eX86); $cax = json_decode($response, true); if(! $cax['success']) { $xAC063X21['zone'] = ''; $xAC063X21['status'] = 'err_get_dev'; return false; } $xAC063X21['value'] = $cax['result']['value']; $m = $cax['result']['time_remaining']/60; $h = intval($m/60); $m = $m%60; $xAC063X21['time_remaining'] = $h.'h '.$m.'m'; return true; }   function cflare_set_devmode(&$xAC063X21) { $ar = array('value' => $xAC063X21['onoff']); $value = json_encode($ar);  $url = 'https://api.cloudflare.com/client/v4/zones/'.$xAC063X21['zone'].'/settings/development_mode'; $x0b37eX86 = curl_init(); curl_setopt($x0b37eX86, CURLOPT_URL, $url); curl_setopt($x0b37eX86, CURLOPT_CUSTOMREQUEST, 'PATCH'); curl_setopt($x0b37eX86, CURLOPT_HTTPHEADER, array( 'X-Auth-Email:'.$xAC063X21['email'], 'X-Auth-Key:'.$xAC063X21['key'], 'Content-Length:'.strlen($value), 'Content-Type:application/json' ) ); curl_setopt($x0b37eX86, CURLOPT_POSTFIELDS, $value); curl_setopt($x0b37eX86, CURLOPT_RETURNTRANSFER, 1); $response = trim(curl_exec($x0b37eX86)); curl_close($x0b37eX86); $cax = json_decode($response, true); if( (!$cax['success']) || (empty($cax['result'])) ) { $xAC063X21['zone'] = ''; $xAC063X21['status'] = 'err_set_dev'; return false; } $xAC063X21['onoff'] = $cax['result']['value']; $m = $cax['result']['time_remaining']/60; $h = intval($m/60); $m = $m%60; $xAC063X21['time_remaining'] = $h.'h '.$m.'m'; return true; }